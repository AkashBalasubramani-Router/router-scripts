// package: routerprotocol.routerchain.crosschain
// file: routerchain/crosschain/genesis.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../gogoproto/gogo_pb";
import * as routerchain_crosschain_params_pb from "../../routerchain/crosschain/params_pb";
import * as routerchain_crosschain_crosschain_request_pb from "../../routerchain/crosschain/crosschain_request_pb";
import * as routerchain_crosschain_crosschain_request_confirm_pb from "../../routerchain/crosschain/crosschain_request_confirm_pb";
import * as routerchain_crosschain_crosschain_ack_request_pb from "../../routerchain/crosschain/crosschain_ack_request_pb";
import * as routerchain_crosschain_crosschain_ack_request_confirm_pb from "../../routerchain/crosschain/crosschain_ack_request_confirm_pb";
import * as routerchain_crosschain_crosschain_ack_receipt_pb from "../../routerchain/crosschain/crosschain_ack_receipt_pb";

export class GenesisState extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): routerchain_crosschain_params_pb.Params | undefined;
  setParams(value?: routerchain_crosschain_params_pb.Params): void;

  clearCrosschainrequestlistList(): void;
  getCrosschainrequestlistList(): Array<routerchain_crosschain_crosschain_request_pb.CrosschainRequest>;
  setCrosschainrequestlistList(value: Array<routerchain_crosschain_crosschain_request_pb.CrosschainRequest>): void;
  addCrosschainrequestlist(value?: routerchain_crosschain_crosschain_request_pb.CrosschainRequest, index?: number): routerchain_crosschain_crosschain_request_pb.CrosschainRequest;

  clearCrosschainrequestconfirmlistList(): void;
  getCrosschainrequestconfirmlistList(): Array<routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm>;
  setCrosschainrequestconfirmlistList(value: Array<routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm>): void;
  addCrosschainrequestconfirmlist(value?: routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm, index?: number): routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm;

  clearCrosschainackrequestlistList(): void;
  getCrosschainackrequestlistList(): Array<routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest>;
  setCrosschainackrequestlistList(value: Array<routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest>): void;
  addCrosschainackrequestlist(value?: routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest, index?: number): routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest;

  clearCrosschainackrequestconfirmlistList(): void;
  getCrosschainackrequestconfirmlistList(): Array<routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm>;
  setCrosschainackrequestconfirmlistList(value: Array<routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm>): void;
  addCrosschainackrequestconfirmlist(value?: routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm, index?: number): routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm;

  clearCrosschainackreceiptlistList(): void;
  getCrosschainackreceiptlistList(): Array<routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt>;
  setCrosschainackreceiptlistList(value: Array<routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt>): void;
  addCrosschainackreceiptlist(value?: routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt, index?: number): routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GenesisState.AsObject;
  static toObject(includeInstance: boolean, msg: GenesisState): GenesisState.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GenesisState, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GenesisState;
  static deserializeBinaryFromReader(message: GenesisState, reader: jspb.BinaryReader): GenesisState;
}

export namespace GenesisState {
  export type AsObject = {
    params?: routerchain_crosschain_params_pb.Params.AsObject,
    crosschainrequestlistList: Array<routerchain_crosschain_crosschain_request_pb.CrosschainRequest.AsObject>,
    crosschainrequestconfirmlistList: Array<routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.AsObject>,
    crosschainackrequestlistList: Array<routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.AsObject>,
    crosschainackrequestconfirmlistList: Array<routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.AsObject>,
    crosschainackreceiptlistList: Array<routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.AsObject>,
  }
}

