// source: routerchain/crosschain/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var routerchain_crosschain_params_pb = require('../../routerchain/crosschain/params_pb.js');
goog.object.extend(proto, routerchain_crosschain_params_pb);
var routerchain_crosschain_crosschain_request_pb = require('../../routerchain/crosschain/crosschain_request_pb.js');
goog.object.extend(proto, routerchain_crosschain_crosschain_request_pb);
var routerchain_crosschain_crosschain_request_confirm_pb = require('../../routerchain/crosschain/crosschain_request_confirm_pb.js');
goog.object.extend(proto, routerchain_crosschain_crosschain_request_confirm_pb);
var routerchain_crosschain_crosschain_ack_request_pb = require('../../routerchain/crosschain/crosschain_ack_request_pb.js');
goog.object.extend(proto, routerchain_crosschain_crosschain_ack_request_pb);
var routerchain_crosschain_crosschain_ack_request_confirm_pb = require('../../routerchain/crosschain/crosschain_ack_request_confirm_pb.js');
goog.object.extend(proto, routerchain_crosschain_crosschain_ack_request_confirm_pb);
var routerchain_crosschain_crosschain_ack_receipt_pb = require('../../routerchain/crosschain/crosschain_ack_receipt_pb.js');
goog.object.extend(proto, routerchain_crosschain_crosschain_ack_receipt_pb);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryParamsRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.crosschain.QueryParamsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryParamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.displayName = 'proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryParamsRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && routerchain_crosschain_params_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryParamsResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_params_pb.Params;
      reader.readMessage(value,routerchain_crosschain_params_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      routerchain_crosschain_params_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.routerprotocol.routerchain.crosschain.Params}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.routerprotocol.routerchain.crosschain.Params} */ (
    jspb.Message.getWrapperField(this, routerchain_crosschain_params_pb.Params, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.crosschain.Params|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryParamsResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryParamsResponse.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcechainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcechainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestidentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcechainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string sourceChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.getSourcechainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.setSourcechainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 requestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.getRequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestRequest.prototype.setRequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainrequestList: jspb.Message.toObjectList(msg.getCrosschainrequestList(),
    routerchain_crosschain_crosschain_request_pb.CrosschainRequest.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_request_pb.CrosschainRequest;
      reader.readMessage(value,routerchain_crosschain_crosschain_request_pb.CrosschainRequest.deserializeBinaryFromReader);
      msg.addCrosschainrequest(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainrequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_request_pb.CrosschainRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainRequest crosschainRequest = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.getCrosschainrequestList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_request_pb.CrosschainRequest, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.setCrosschainrequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.addCrosschainrequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.clearCrosschainrequestList = function() {
  return this.setCrosschainrequestList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainrequestList: jspb.Message.toObjectList(msg.getCrosschainrequestList(),
    routerchain_crosschain_crosschain_request_pb.CrosschainRequest.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_request_pb.CrosschainRequest;
      reader.readMessage(value,routerchain_crosschain_crosschain_request_pb.CrosschainRequest.deserializeBinaryFromReader);
      msg.addCrosschainrequest(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainrequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_request_pb.CrosschainRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainRequest crosschainRequest = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.getCrosschainrequestList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_request_pb.CrosschainRequest, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequest>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.setCrosschainrequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.addCrosschainrequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.clearCrosschainrequestList = function() {
  return this.setCrosschainrequestList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcechainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0),
    claimhash: msg.getClaimhash_asB64(),
    orchestrator: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcechainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestidentifier(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClaimhash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcechainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getClaimhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sourceChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getSourcechainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.setSourcechainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 requestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getRequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.setRequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes claimHash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getClaimhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes claimHash = 3;
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getClaimhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClaimhash()));
};


/**
 * optional bytes claimHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getClaimhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClaimhash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.setClaimhash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string orchestrator = 4;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmRequest.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainrequestconfirm: (f = msg.getCrosschainrequestconfirm()) && routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm;
      reader.readMessage(value,routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.deserializeBinaryFromReader);
      msg.setCrosschainrequestconfirm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainrequestconfirm();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrosschainRequestConfirm crosschainRequestConfirm = 1;
 * @return {?proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.getCrosschainrequestconfirm = function() {
  return /** @type{?proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm} */ (
    jspb.Message.getWrapperField(this, routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.setCrosschainrequestconfirm = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.clearCrosschainrequestconfirm = function() {
  return this.setCrosschainrequestconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainRequestConfirmResponse.prototype.hasCrosschainrequestconfirm = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcechainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0),
    claimhash: msg.getClaimhash_asB64(),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcechainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestidentifier(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClaimhash(value);
      break;
    case 4:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcechainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getClaimhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sourceChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getSourcechainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.setSourcechainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 requestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getRequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.setRequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes claimHash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getClaimhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes claimHash = 3;
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getClaimhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClaimhash()));
};


/**
 * optional bytes claimHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getClaimhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClaimhash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.setClaimhash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 4;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 4));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainrequestconfirmList: jspb.Message.toObjectList(msg.getCrosschainrequestconfirmList(),
    routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm;
      reader.readMessage(value,routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.deserializeBinaryFromReader);
      msg.addCrosschainrequestconfirm(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainrequestconfirmList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainRequestConfirm crosschainRequestConfirm = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm>}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.getCrosschainrequestconfirmList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_request_confirm_pb.CrosschainRequestConfirm, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.setCrosschainrequestconfirmList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.addCrosschainrequestconfirm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainRequestConfirm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.clearCrosschainrequestconfirmList = function() {
  return this.setCrosschainrequestconfirmList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainRequestConfirmResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    acksrcchainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ackrequestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcksrcchainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAckrequestidentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcksrcchainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAckrequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string ackSrcChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.getAcksrcchainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.setAcksrcchainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 ackRequestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.getAckrequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestRequest.prototype.setAckrequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackrequestList: jspb.Message.toObjectList(msg.getCrosschainackrequestList(),
    routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.deserializeBinaryFromReader);
      msg.addCrosschainackrequest(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackrequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainAckRequest crosschainAckRequest = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.getCrosschainackrequestList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.setCrosschainackrequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.addCrosschainackrequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.clearCrosschainackrequestList = function() {
  return this.setCrosschainackrequestList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackrequestList: jspb.Message.toObjectList(msg.getCrosschainackrequestList(),
    routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.deserializeBinaryFromReader);
      msg.addCrosschainackrequest(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackrequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainAckRequest crosschainAckRequest = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.getCrosschainackrequestList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_ack_request_pb.CrosschainAckRequest, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.setCrosschainackrequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.addCrosschainackrequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainAckRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.clearCrosschainackrequestList = function() {
  return this.setCrosschainackrequestList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    acksrcchainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ackrequestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0),
    claimhash: msg.getClaimhash_asB64(),
    orchestrator: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcksrcchainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAckrequestidentifier(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClaimhash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcksrcchainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAckrequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getClaimhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string ackSrcChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getAcksrcchainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.setAcksrcchainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 ackRequestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getAckrequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.setAckrequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes claimHash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getClaimhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes claimHash = 3;
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getClaimhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClaimhash()));
};


/**
 * optional bytes claimHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getClaimhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClaimhash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.setClaimhash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string orchestrator = 4;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmRequest.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackrequestconfirm: (f = msg.getCrosschainackrequestconfirm()) && routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.deserializeBinaryFromReader);
      msg.setCrosschainackrequestconfirm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackrequestconfirm();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrosschainAckRequestConfirm crosschainAckRequestConfirm = 1;
 * @return {?proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.getCrosschainackrequestconfirm = function() {
  return /** @type{?proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm} */ (
    jspb.Message.getWrapperField(this, routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.setCrosschainackrequestconfirm = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.clearCrosschainackrequestconfirm = function() {
  return this.setCrosschainackrequestconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckRequestConfirmResponse.prototype.hasCrosschainackrequestconfirm = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    acksrcchainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ackrequestidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0),
    claimhash: msg.getClaimhash_asB64(),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcksrcchainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAckrequestidentifier(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClaimhash(value);
      break;
    case 4:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcksrcchainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAckrequestidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getClaimhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ackSrcChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getAcksrcchainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.setAcksrcchainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 ackRequestIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getAckrequestidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.setAckrequestidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes claimHash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getClaimhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes claimHash = 3;
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getClaimhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClaimhash()));
};


/**
 * optional bytes claimHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClaimhash()`
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getClaimhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClaimhash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.setClaimhash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 4;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 4));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackrequestconfirmList: jspb.Message.toObjectList(msg.getCrosschainackrequestconfirmList(),
    routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.deserializeBinaryFromReader);
      msg.addCrosschainackrequestconfirm(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackrequestconfirmList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainAckRequestConfirm crosschainAckRequestConfirm = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm>}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.getCrosschainackrequestconfirmList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_ack_request_confirm_pb.CrosschainAckRequestConfirm, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.setCrosschainackrequestconfirmList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.addCrosschainackrequestconfirm = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainAckRequestConfirm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.clearCrosschainackrequestconfirmList = function() {
  return this.setCrosschainackrequestconfirmList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckRequestConfirmResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ackreceiptsrcchainid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ackreceiptidentifier: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAckreceiptsrcchainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAckreceiptidentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAckreceiptsrcchainid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAckreceiptidentifier();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string ackReceiptSrcChainId = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.getAckreceiptsrcchainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.setAckreceiptsrcchainid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 ackReceiptIdentifier = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.getAckreceiptidentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptRequest.prototype.setAckreceiptidentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackreceiptList: jspb.Message.toObjectList(msg.getCrosschainackreceiptList(),
    routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.deserializeBinaryFromReader);
      msg.addCrosschainackreceipt(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackreceiptList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainAckReceipt crosschainAckReceipt = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.getCrosschainackreceiptList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.setCrosschainackreceiptList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.addCrosschainackreceipt = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.clearCrosschainackreceiptList = function() {
  return this.setCrosschainackreceiptList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryGetCrosschainAckReceiptResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    crosschainackreceiptList: jspb.Message.toObjectList(msg.getCrosschainackreceiptList(),
    routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse;
  return proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt;
      reader.readMessage(value,routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.deserializeBinaryFromReader);
      msg.addCrosschainackreceipt(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrosschainackreceiptList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CrosschainAckReceipt crosschainAckReceipt = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.getCrosschainackreceiptList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>} */ (
    jspb.Message.getRepeatedWrapperField(this, routerchain_crosschain_crosschain_ack_receipt_pb.CrosschainAckReceipt, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt>} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.setCrosschainackreceiptList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.addCrosschainackreceipt = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.crosschain.CrosschainAckReceipt, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.clearCrosschainackreceiptList = function() {
  return this.setCrosschainackreceiptList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} returns this
*/
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse} returns this
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.crosschain.QueryAllCrosschainAckReceiptResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.routerprotocol.routerchain.crosschain);
