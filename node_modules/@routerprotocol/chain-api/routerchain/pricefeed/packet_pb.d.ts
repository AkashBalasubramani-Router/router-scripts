// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/packet.proto

import * as jspb from "google-protobuf";

export class PricefeedPacketData extends jspb.Message {
  hasNodata(): boolean;
  clearNodata(): void;
  getNodata(): NoData | undefined;
  setNodata(value?: NoData): void;

  getPacketCase(): PricefeedPacketData.PacketCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): PricefeedPacketData.AsObject;
  static toObject(includeInstance: boolean, msg: PricefeedPacketData): PricefeedPacketData.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: PricefeedPacketData, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): PricefeedPacketData;
  static deserializeBinaryFromReader(message: PricefeedPacketData, reader: jspb.BinaryReader): PricefeedPacketData;
}

export namespace PricefeedPacketData {
  export type AsObject = {
    nodata?: NoData.AsObject,
  }

  export enum PacketCase {
    PACKET_NOT_SET = 0,
    NODATA = 1,
  }
}

export class NoData extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): NoData.AsObject;
  static toObject(includeInstance: boolean, msg: NoData): NoData.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: NoData, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): NoData;
  static deserializeBinaryFromReader(message: NoData, reader: jspb.BinaryReader): NoData;
}

export namespace NoData {
  export type AsObject = {
  }
}

