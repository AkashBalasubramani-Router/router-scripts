// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/price.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../gogoproto/gogo_pb";
import * as cosmos_base_v1beta1_coin_pb from "../../cosmos/base/v1beta1/coin_pb";

export class Price extends jspb.Message {
  getPriceFeeder(): string;
  setPriceFeeder(value: string): void;

  getSymbol(): string;
  setSymbol(value: string): void;

  getPrice(): string;
  setPrice(value: string): void;

  getResolvetime(): number;
  setResolvetime(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Price.AsObject;
  static toObject(includeInstance: boolean, msg: Price): Price.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Price, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Price;
  static deserializeBinaryFromReader(message: Price, reader: jspb.BinaryReader): Price;
}

export namespace Price {
  export type AsObject = {
    priceFeeder: string,
    symbol: string,
    price: string,
    resolvetime: number,
  }
}

