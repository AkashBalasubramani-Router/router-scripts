// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/symbol_request.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../gogoproto/gogo_pb";

export class SymbolRequest extends jspb.Message {
  getSymbol(): string;
  setSymbol(value: string): void;

  getOracleScriptId(): number;
  setOracleScriptId(value: number): void;

  getBlockInterval(): number;
  setBlockInterval(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): SymbolRequest.AsObject;
  static toObject(includeInstance: boolean, msg: SymbolRequest): SymbolRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: SymbolRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): SymbolRequest;
  static deserializeBinaryFromReader(message: SymbolRequest, reader: jspb.BinaryReader): SymbolRequest;
}

export namespace SymbolRequest {
  export type AsObject = {
    symbol: string,
    oracleScriptId: number,
    blockInterval: number,
  }
}

