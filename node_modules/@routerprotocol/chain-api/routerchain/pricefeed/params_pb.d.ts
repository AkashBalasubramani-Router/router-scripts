// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/params.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../gogoproto/gogo_pb";
import * as cosmos_base_v1beta1_coin_pb from "../../cosmos/base/v1beta1/coin_pb";

export class Params extends jspb.Message {
  getAskCount(): number;
  setAskCount(value: number): void;

  getMinCount(): number;
  setMinCount(value: number): void;

  getMinDsCount(): number;
  setMinDsCount(value: number): void;

  getPrepareGasBase(): number;
  setPrepareGasBase(value: number): void;

  getPrepareGasEach(): number;
  setPrepareGasEach(value: number): void;

  getExecuteGasBase(): number;
  setExecuteGasBase(value: number): void;

  getExecuteGasEach(): number;
  setExecuteGasEach(value: number): void;

  getSourceChannel(): string;
  setSourceChannel(value: string): void;

  clearFeeLimitList(): void;
  getFeeLimitList(): Array<cosmos_base_v1beta1_coin_pb.Coin>;
  setFeeLimitList(value: Array<cosmos_base_v1beta1_coin_pb.Coin>): void;
  addFeeLimit(value?: cosmos_base_v1beta1_coin_pb.Coin, index?: number): cosmos_base_v1beta1_coin_pb.Coin;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Params.AsObject;
  static toObject(includeInstance: boolean, msg: Params): Params.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Params, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Params;
  static deserializeBinaryFromReader(message: Params, reader: jspb.BinaryReader): Params;
}

export namespace Params {
  export type AsObject = {
    askCount: number,
    minCount: number,
    minDsCount: number,
    prepareGasBase: number,
    prepareGasEach: number,
    executeGasBase: number,
    executeGasEach: number,
    sourceChannel: string,
    feeLimitList: Array<cosmos_base_v1beta1_coin_pb.Coin.AsObject>,
  }
}

