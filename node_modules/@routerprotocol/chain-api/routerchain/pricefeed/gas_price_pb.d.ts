// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/gas_price.proto

import * as jspb from "google-protobuf";

export class GasPrice extends jspb.Message {
  getPriceFeeder(): string;
  setPriceFeeder(value: string): void;

  getChainid(): string;
  setChainid(value: string): void;

  getGasprice(): number;
  setGasprice(value: number): void;

  getDecimals(): number;
  setDecimals(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GasPrice.AsObject;
  static toObject(includeInstance: boolean, msg: GasPrice): GasPrice.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GasPrice, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GasPrice;
  static deserializeBinaryFromReader(message: GasPrice, reader: jspb.BinaryReader): GasPrice;
}

export namespace GasPrice {
  export type AsObject = {
    priceFeeder: string,
    chainid: string,
    gasprice: number,
    decimals: number,
  }
}

