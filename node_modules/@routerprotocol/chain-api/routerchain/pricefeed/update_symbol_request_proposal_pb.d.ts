// package: routerprotocol.routerchain.pricefeed
// file: routerchain/pricefeed/update_symbol_request_proposal.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../gogoproto/gogo_pb";
import * as routerchain_pricefeed_symbol_request_pb from "../../routerchain/pricefeed/symbol_request_pb";

export class UpdateSymbolRequestProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  clearSymbolRequestsList(): void;
  getSymbolRequestsList(): Array<routerchain_pricefeed_symbol_request_pb.SymbolRequest>;
  setSymbolRequestsList(value: Array<routerchain_pricefeed_symbol_request_pb.SymbolRequest>): void;
  addSymbolRequests(value?: routerchain_pricefeed_symbol_request_pb.SymbolRequest, index?: number): routerchain_pricefeed_symbol_request_pb.SymbolRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateSymbolRequestProposal.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateSymbolRequestProposal): UpdateSymbolRequestProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UpdateSymbolRequestProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateSymbolRequestProposal;
  static deserializeBinaryFromReader(message: UpdateSymbolRequestProposal, reader: jspb.BinaryReader): UpdateSymbolRequestProposal;
}

export namespace UpdateSymbolRequestProposal {
  export type AsObject = {
    title: string,
    description: string,
    symbolRequestsList: Array<routerchain_pricefeed_symbol_request_pb.SymbolRequest.AsObject>,
  }
}

