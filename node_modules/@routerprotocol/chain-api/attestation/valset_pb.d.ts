// package: routerprotocol.routerchain.attestation
// file: attestation/valset.proto

import * as jspb from "google-protobuf";
import * as attestation_bridge_validator_pb from "../attestation/bridge_validator_pb";
import * as gogoproto_gogo_pb from "../gogoproto/gogo_pb";

export class Valset extends jspb.Message {
  getNonce(): number;
  setNonce(value: number): void;

  clearMembersList(): void;
  getMembersList(): Array<attestation_bridge_validator_pb.BridgeValidator>;
  setMembersList(value: Array<attestation_bridge_validator_pb.BridgeValidator>): void;
  addMembers(value?: attestation_bridge_validator_pb.BridgeValidator, index?: number): attestation_bridge_validator_pb.BridgeValidator;

  getHeight(): number;
  setHeight(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Valset.AsObject;
  static toObject(includeInstance: boolean, msg: Valset): Valset.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Valset, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Valset;
  static deserializeBinaryFromReader(message: Valset, reader: jspb.BinaryReader): Valset;
}

export namespace Valset {
  export type AsObject = {
    nonce: number,
    membersList: Array<attestation_bridge_validator_pb.BridgeValidator.AsObject>,
    height: number,
  }
}

