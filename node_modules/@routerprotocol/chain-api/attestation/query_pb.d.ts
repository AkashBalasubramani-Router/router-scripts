// package: routerprotocol.routerchain.attestation
// file: attestation/query.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../gogoproto/gogo_pb";
import * as google_api_annotations_pb from "../google/api/annotations_pb";
import * as cosmos_base_query_v1beta1_pagination_pb from "../cosmos/base/query/v1beta1/pagination_pb";
import * as attestation_params_pb from "../attestation/params_pb";
import * as attestation_valset_pb from "../attestation/valset_pb";
import * as attestation_attestation_pb from "../attestation/attestation_pb";
import * as attestation_valset_confirmation_pb from "../attestation/valset_confirmation_pb";
import * as attestation_tx_pb from "../attestation/tx_pb";
import * as cosmos_staking_v1beta1_staking_pb from "../cosmos/staking/v1beta1/staking_pb";
import * as attestation_valset_updated_claim_pb from "../attestation/valset_updated_claim_pb";
import * as attestation_bridge_validator_pb from "../attestation/bridge_validator_pb";

export class QueryParamsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsRequest): QueryParamsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsRequest;
  static deserializeBinaryFromReader(message: QueryParamsRequest, reader: jspb.BinaryReader): QueryParamsRequest;
}

export namespace QueryParamsRequest {
  export type AsObject = {
  }
}

export class QueryParamsResponse extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): attestation_params_pb.Params | undefined;
  setParams(value?: attestation_params_pb.Params): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsResponse): QueryParamsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsResponse;
  static deserializeBinaryFromReader(message: QueryParamsResponse, reader: jspb.BinaryReader): QueryParamsResponse;
}

export namespace QueryParamsResponse {
  export type AsObject = {
    params?: attestation_params_pb.Params.AsObject,
  }
}

export class QueryGetValsetRequest extends jspb.Message {
  getNonce(): number;
  setNonce(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetRequest): QueryGetValsetRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetRequest;
  static deserializeBinaryFromReader(message: QueryGetValsetRequest, reader: jspb.BinaryReader): QueryGetValsetRequest;
}

export namespace QueryGetValsetRequest {
  export type AsObject = {
    nonce: number,
  }
}

export class QueryGetValsetResponse extends jspb.Message {
  hasValset(): boolean;
  clearValset(): void;
  getValset(): attestation_valset_pb.Valset | undefined;
  setValset(value?: attestation_valset_pb.Valset): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetResponse): QueryGetValsetResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetResponse;
  static deserializeBinaryFromReader(message: QueryGetValsetResponse, reader: jspb.BinaryReader): QueryGetValsetResponse;
}

export namespace QueryGetValsetResponse {
  export type AsObject = {
    valset?: attestation_valset_pb.Valset.AsObject,
  }
}

export class QueryAllValsetRequest extends jspb.Message {
  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageRequest | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetRequest): QueryAllValsetRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetRequest;
  static deserializeBinaryFromReader(message: QueryAllValsetRequest, reader: jspb.BinaryReader): QueryAllValsetRequest;
}

export namespace QueryAllValsetRequest {
  export type AsObject = {
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageRequest.AsObject,
  }
}

export class QueryAllValsetResponse extends jspb.Message {
  clearValsetList(): void;
  getValsetList(): Array<attestation_valset_pb.Valset>;
  setValsetList(value: Array<attestation_valset_pb.Valset>): void;
  addValset(value?: attestation_valset_pb.Valset, index?: number): attestation_valset_pb.Valset;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageResponse | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageResponse): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetResponse): QueryAllValsetResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetResponse;
  static deserializeBinaryFromReader(message: QueryAllValsetResponse, reader: jspb.BinaryReader): QueryAllValsetResponse;
}

export namespace QueryAllValsetResponse {
  export type AsObject = {
    valsetList: Array<attestation_valset_pb.Valset.AsObject>,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageResponse.AsObject,
  }
}

export class QueryGetAttestationRequest extends jspb.Message {
  getChainId(): string;
  setChainId(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventNonce(): number;
  setEventNonce(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetAttestationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetAttestationRequest): QueryGetAttestationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetAttestationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetAttestationRequest;
  static deserializeBinaryFromReader(message: QueryGetAttestationRequest, reader: jspb.BinaryReader): QueryGetAttestationRequest;
}

export namespace QueryGetAttestationRequest {
  export type AsObject = {
    chainId: string,
    contract: string,
    eventNonce: number,
  }
}

export class QueryGetAttestationResponse extends jspb.Message {
  hasAttestation(): boolean;
  clearAttestation(): void;
  getAttestation(): attestation_attestation_pb.Attestation | undefined;
  setAttestation(value?: attestation_attestation_pb.Attestation): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetAttestationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetAttestationResponse): QueryGetAttestationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetAttestationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetAttestationResponse;
  static deserializeBinaryFromReader(message: QueryGetAttestationResponse, reader: jspb.BinaryReader): QueryGetAttestationResponse;
}

export namespace QueryGetAttestationResponse {
  export type AsObject = {
    attestation?: attestation_attestation_pb.Attestation.AsObject,
  }
}

export class QueryAllAttestationRequest extends jspb.Message {
  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageRequest | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllAttestationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllAttestationRequest): QueryAllAttestationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllAttestationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllAttestationRequest;
  static deserializeBinaryFromReader(message: QueryAllAttestationRequest, reader: jspb.BinaryReader): QueryAllAttestationRequest;
}

export namespace QueryAllAttestationRequest {
  export type AsObject = {
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageRequest.AsObject,
  }
}

export class QueryAllAttestationResponse extends jspb.Message {
  clearAttestationList(): void;
  getAttestationList(): Array<attestation_attestation_pb.Attestation>;
  setAttestationList(value: Array<attestation_attestation_pb.Attestation>): void;
  addAttestation(value?: attestation_attestation_pb.Attestation, index?: number): attestation_attestation_pb.Attestation;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageResponse | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageResponse): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllAttestationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllAttestationResponse): QueryAllAttestationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllAttestationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllAttestationResponse;
  static deserializeBinaryFromReader(message: QueryAllAttestationResponse, reader: jspb.BinaryReader): QueryAllAttestationResponse;
}

export namespace QueryAllAttestationResponse {
  export type AsObject = {
    attestationList: Array<attestation_attestation_pb.Attestation.AsObject>,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageResponse.AsObject,
  }
}

export class QueryGetValsetConfirmationRequest extends jspb.Message {
  getValsetNonce(): number;
  setValsetNonce(value: number): void;

  getOrchestrator(): string;
  setOrchestrator(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetConfirmationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetConfirmationRequest): QueryGetValsetConfirmationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetConfirmationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetConfirmationRequest;
  static deserializeBinaryFromReader(message: QueryGetValsetConfirmationRequest, reader: jspb.BinaryReader): QueryGetValsetConfirmationRequest;
}

export namespace QueryGetValsetConfirmationRequest {
  export type AsObject = {
    valsetNonce: number,
    orchestrator: string,
  }
}

export class QueryGetValsetConfirmationResponse extends jspb.Message {
  hasValsetconfirmation(): boolean;
  clearValsetconfirmation(): void;
  getValsetconfirmation(): attestation_valset_confirmation_pb.ValsetConfirmation | undefined;
  setValsetconfirmation(value?: attestation_valset_confirmation_pb.ValsetConfirmation): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetConfirmationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetConfirmationResponse): QueryGetValsetConfirmationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetConfirmationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetConfirmationResponse;
  static deserializeBinaryFromReader(message: QueryGetValsetConfirmationResponse, reader: jspb.BinaryReader): QueryGetValsetConfirmationResponse;
}

export namespace QueryGetValsetConfirmationResponse {
  export type AsObject = {
    valsetconfirmation?: attestation_valset_confirmation_pb.ValsetConfirmation.AsObject,
  }
}

export class QueryAllValsetConfirmationRequest extends jspb.Message {
  getValsetNonce(): number;
  setValsetNonce(value: number): void;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageRequest | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetConfirmationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetConfirmationRequest): QueryAllValsetConfirmationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetConfirmationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetConfirmationRequest;
  static deserializeBinaryFromReader(message: QueryAllValsetConfirmationRequest, reader: jspb.BinaryReader): QueryAllValsetConfirmationRequest;
}

export namespace QueryAllValsetConfirmationRequest {
  export type AsObject = {
    valsetNonce: number,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageRequest.AsObject,
  }
}

export class QueryAllValsetConfirmationResponse extends jspb.Message {
  clearValsetconfirmationList(): void;
  getValsetconfirmationList(): Array<attestation_valset_confirmation_pb.ValsetConfirmation>;
  setValsetconfirmationList(value: Array<attestation_valset_confirmation_pb.ValsetConfirmation>): void;
  addValsetconfirmation(value?: attestation_valset_confirmation_pb.ValsetConfirmation, index?: number): attestation_valset_confirmation_pb.ValsetConfirmation;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageResponse | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageResponse): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetConfirmationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetConfirmationResponse): QueryAllValsetConfirmationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetConfirmationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetConfirmationResponse;
  static deserializeBinaryFromReader(message: QueryAllValsetConfirmationResponse, reader: jspb.BinaryReader): QueryAllValsetConfirmationResponse;
}

export namespace QueryAllValsetConfirmationResponse {
  export type AsObject = {
    valsetconfirmationList: Array<attestation_valset_confirmation_pb.ValsetConfirmation.AsObject>,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageResponse.AsObject,
  }
}

export class QueryGetValsetUpdatedClaimRequest extends jspb.Message {
  getChainId(): string;
  setChainId(value: string): void;

  getEventNonce(): number;
  setEventNonce(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetUpdatedClaimRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetUpdatedClaimRequest): QueryGetValsetUpdatedClaimRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetUpdatedClaimRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetUpdatedClaimRequest;
  static deserializeBinaryFromReader(message: QueryGetValsetUpdatedClaimRequest, reader: jspb.BinaryReader): QueryGetValsetUpdatedClaimRequest;
}

export namespace QueryGetValsetUpdatedClaimRequest {
  export type AsObject = {
    chainId: string,
    eventNonce: number,
  }
}

export class QueryGetValsetUpdatedClaimResponse extends jspb.Message {
  hasValsetupdatedclaim(): boolean;
  clearValsetupdatedclaim(): void;
  getValsetupdatedclaim(): attestation_valset_updated_claim_pb.ValsetUpdatedClaim | undefined;
  setValsetupdatedclaim(value?: attestation_valset_updated_claim_pb.ValsetUpdatedClaim): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryGetValsetUpdatedClaimResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryGetValsetUpdatedClaimResponse): QueryGetValsetUpdatedClaimResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryGetValsetUpdatedClaimResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryGetValsetUpdatedClaimResponse;
  static deserializeBinaryFromReader(message: QueryGetValsetUpdatedClaimResponse, reader: jspb.BinaryReader): QueryGetValsetUpdatedClaimResponse;
}

export namespace QueryGetValsetUpdatedClaimResponse {
  export type AsObject = {
    valsetupdatedclaim?: attestation_valset_updated_claim_pb.ValsetUpdatedClaim.AsObject,
  }
}

export class QueryAllValsetUpdatedClaimRequest extends jspb.Message {
  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageRequest | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetUpdatedClaimRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetUpdatedClaimRequest): QueryAllValsetUpdatedClaimRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetUpdatedClaimRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetUpdatedClaimRequest;
  static deserializeBinaryFromReader(message: QueryAllValsetUpdatedClaimRequest, reader: jspb.BinaryReader): QueryAllValsetUpdatedClaimRequest;
}

export namespace QueryAllValsetUpdatedClaimRequest {
  export type AsObject = {
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageRequest.AsObject,
  }
}

export class QueryAllValsetUpdatedClaimResponse extends jspb.Message {
  clearValsetupdatedclaimList(): void;
  getValsetupdatedclaimList(): Array<attestation_valset_updated_claim_pb.ValsetUpdatedClaim>;
  setValsetupdatedclaimList(value: Array<attestation_valset_updated_claim_pb.ValsetUpdatedClaim>): void;
  addValsetupdatedclaim(value?: attestation_valset_updated_claim_pb.ValsetUpdatedClaim, index?: number): attestation_valset_updated_claim_pb.ValsetUpdatedClaim;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageResponse | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageResponse): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAllValsetUpdatedClaimResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAllValsetUpdatedClaimResponse): QueryAllValsetUpdatedClaimResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAllValsetUpdatedClaimResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAllValsetUpdatedClaimResponse;
  static deserializeBinaryFromReader(message: QueryAllValsetUpdatedClaimResponse, reader: jspb.BinaryReader): QueryAllValsetUpdatedClaimResponse;
}

export namespace QueryAllValsetUpdatedClaimResponse {
  export type AsObject = {
    valsetupdatedclaimList: Array<attestation_valset_updated_claim_pb.ValsetUpdatedClaim.AsObject>,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageResponse.AsObject,
  }
}

export class QueryLatestValsetNonceRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLatestValsetNonceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLatestValsetNonceRequest): QueryLatestValsetNonceRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLatestValsetNonceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLatestValsetNonceRequest;
  static deserializeBinaryFromReader(message: QueryLatestValsetNonceRequest, reader: jspb.BinaryReader): QueryLatestValsetNonceRequest;
}

export namespace QueryLatestValsetNonceRequest {
  export type AsObject = {
  }
}

export class QueryLatestValsetNonceResponse extends jspb.Message {
  getValsetnonce(): number;
  setValsetnonce(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLatestValsetNonceResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLatestValsetNonceResponse): QueryLatestValsetNonceResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLatestValsetNonceResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLatestValsetNonceResponse;
  static deserializeBinaryFromReader(message: QueryLatestValsetNonceResponse, reader: jspb.BinaryReader): QueryLatestValsetNonceResponse;
}

export namespace QueryLatestValsetNonceResponse {
  export type AsObject = {
    valsetnonce: number,
  }
}

export class QueryLatestValsetRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLatestValsetRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLatestValsetRequest): QueryLatestValsetRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLatestValsetRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLatestValsetRequest;
  static deserializeBinaryFromReader(message: QueryLatestValsetRequest, reader: jspb.BinaryReader): QueryLatestValsetRequest;
}

export namespace QueryLatestValsetRequest {
  export type AsObject = {
  }
}

export class QueryLatestValsetResponse extends jspb.Message {
  hasValset(): boolean;
  clearValset(): void;
  getValset(): attestation_valset_pb.Valset | undefined;
  setValset(value?: attestation_valset_pb.Valset): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLatestValsetResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLatestValsetResponse): QueryLatestValsetResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLatestValsetResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLatestValsetResponse;
  static deserializeBinaryFromReader(message: QueryLatestValsetResponse, reader: jspb.BinaryReader): QueryLatestValsetResponse;
}

export namespace QueryLatestValsetResponse {
  export type AsObject = {
    valset?: attestation_valset_pb.Valset.AsObject,
  }
}

export class QueryLastEventNonceRequest extends jspb.Message {
  getChainId(): string;
  setChainId(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getValidatorAddress(): string;
  setValidatorAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLastEventNonceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLastEventNonceRequest): QueryLastEventNonceRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLastEventNonceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLastEventNonceRequest;
  static deserializeBinaryFromReader(message: QueryLastEventNonceRequest, reader: jspb.BinaryReader): QueryLastEventNonceRequest;
}

export namespace QueryLastEventNonceRequest {
  export type AsObject = {
    chainId: string,
    contract: string,
    validatorAddress: string,
  }
}

export class QueryLastEventNonceResponse extends jspb.Message {
  getEventnonce(): number;
  setEventnonce(value: number): void;

  getEventheight(): number;
  setEventheight(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryLastEventNonceResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryLastEventNonceResponse): QueryLastEventNonceResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryLastEventNonceResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryLastEventNonceResponse;
  static deserializeBinaryFromReader(message: QueryLastEventNonceResponse, reader: jspb.BinaryReader): QueryLastEventNonceResponse;
}

export namespace QueryLastEventNonceResponse {
  export type AsObject = {
    eventnonce: number,
    eventheight: number,
  }
}

export class QueryListOrchestratorsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryListOrchestratorsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryListOrchestratorsRequest): QueryListOrchestratorsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryListOrchestratorsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryListOrchestratorsRequest;
  static deserializeBinaryFromReader(message: QueryListOrchestratorsRequest, reader: jspb.BinaryReader): QueryListOrchestratorsRequest;
}

export namespace QueryListOrchestratorsRequest {
  export type AsObject = {
  }
}

export class QueryListOrchestratorsResponse extends jspb.Message {
  clearOrchestratorSetList(): void;
  getOrchestratorSetList(): Array<attestation_tx_pb.MsgSetOrchestratorAddress>;
  setOrchestratorSetList(value: Array<attestation_tx_pb.MsgSetOrchestratorAddress>): void;
  addOrchestratorSet(value?: attestation_tx_pb.MsgSetOrchestratorAddress, index?: number): attestation_tx_pb.MsgSetOrchestratorAddress;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryListOrchestratorsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryListOrchestratorsResponse): QueryListOrchestratorsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryListOrchestratorsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryListOrchestratorsResponse;
  static deserializeBinaryFromReader(message: QueryListOrchestratorsResponse, reader: jspb.BinaryReader): QueryListOrchestratorsResponse;
}

export namespace QueryListOrchestratorsResponse {
  export type AsObject = {
    orchestratorSetList: Array<attestation_tx_pb.MsgSetOrchestratorAddress.AsObject>,
  }
}

export class QueryFetchOrchestratorValidatorRequest extends jspb.Message {
  getOrchestratorAddress(): string;
  setOrchestratorAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryFetchOrchestratorValidatorRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryFetchOrchestratorValidatorRequest): QueryFetchOrchestratorValidatorRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryFetchOrchestratorValidatorRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryFetchOrchestratorValidatorRequest;
  static deserializeBinaryFromReader(message: QueryFetchOrchestratorValidatorRequest, reader: jspb.BinaryReader): QueryFetchOrchestratorValidatorRequest;
}

export namespace QueryFetchOrchestratorValidatorRequest {
  export type AsObject = {
    orchestratorAddress: string,
  }
}

export class QueryFetchOrchestratorValidatorResponse extends jspb.Message {
  hasValidator(): boolean;
  clearValidator(): void;
  getValidator(): cosmos_staking_v1beta1_staking_pb.Validator | undefined;
  setValidator(value?: cosmos_staking_v1beta1_staking_pb.Validator): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryFetchOrchestratorValidatorResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryFetchOrchestratorValidatorResponse): QueryFetchOrchestratorValidatorResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryFetchOrchestratorValidatorResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryFetchOrchestratorValidatorResponse;
  static deserializeBinaryFromReader(message: QueryFetchOrchestratorValidatorResponse, reader: jspb.BinaryReader): QueryFetchOrchestratorValidatorResponse;
}

export namespace QueryFetchOrchestratorValidatorResponse {
  export type AsObject = {
    validator?: cosmos_staking_v1beta1_staking_pb.Validator.AsObject,
  }
}

