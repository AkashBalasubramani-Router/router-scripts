// source: attestation/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var attestation_bridge_validator_pb = require('../attestation/bridge_validator_pb.js');
goog.object.extend(proto, attestation_bridge_validator_pb);
var gogoproto_gogo_pb = require('../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgValsetConfirm', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.displayName = 'proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.displayName = 'proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgValsetConfirm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.displayName = 'proto.routerprotocol.routerchain.attestation.MsgValsetConfirm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.displayName = 'proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.displayName = 'proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.displayName = 'proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orchestrator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ethaddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress;
  return proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidator(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEthaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEthaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string validator = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.getValidator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.setValidator = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string orchestrator = 2;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ethAddress = 3;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.getEthaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress.prototype.setEthaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse;
  return proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.toObject = function(includeInstance, msg) {
  var f, obj = {
    orchestrator: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valsetnonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ethaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    signature: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgValsetConfirm;
  return proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValsetnonce(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEthaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValsetnonce();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEthaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string orchestrator = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 valsetNonce = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.getValsetnonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.setValsetnonce = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ethAddress = 3;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.getEthaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.setEthaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string signature = 4;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirm} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirm.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse;
  return proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.toObject = function(includeInstance, msg) {
  var f, obj = {
    orchestrator: jspb.Message.getFieldWithDefault(msg, 1, ""),
    chainid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 3, ""),
    eventnonce: jspb.Message.getFieldWithDefault(msg, 4, 0),
    valsetnonce: jspb.Message.getFieldWithDefault(msg, 5, 0),
    blockheight: jspb.Message.getFieldWithDefault(msg, 6, 0),
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    attestation_bridge_validator_pb.BridgeValidator.toObject, includeInstance),
    sourcetxhash: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim;
  return proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventnonce(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValsetnonce(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockheight(value);
      break;
    case 7:
      var value = new attestation_bridge_validator_pb.BridgeValidator;
      reader.readMessage(value,attestation_bridge_validator_pb.BridgeValidator.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcetxhash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEventnonce();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getValsetnonce();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      attestation_bridge_validator_pb.BridgeValidator.serializeBinaryToWriter
    );
  }
  f = message.getSourcetxhash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string orchestrator = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string chainId = 2;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getChainid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setChainid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract = 3;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setContract = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 eventNonce = 4;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getEventnonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setEventnonce = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 valsetNonce = 5;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getValsetnonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setValsetnonce = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 blockHeight = 6;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated BridgeValidator members = 7;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.BridgeValidator>}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.BridgeValidator>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_bridge_validator_pb.BridgeValidator, 7));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.BridgeValidator>} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
*/
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.BridgeValidator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.BridgeValidator}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.routerprotocol.routerchain.attestation.BridgeValidator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional string sourceTxHash = 8;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.getSourcetxhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim} returns this
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaim.prototype.setSourcetxhash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse;
  return proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.MsgValsetUpdatedClaimResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.routerprotocol.routerchain.attestation);
