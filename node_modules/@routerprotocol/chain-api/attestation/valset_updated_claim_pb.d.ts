// package: routerprotocol.routerchain.attestation
// file: attestation/valset_updated_claim.proto

import * as jspb from "google-protobuf";
import * as multichain_chain_type_pb from "../multichain/chain_type_pb";
import * as attestation_bridge_validator_pb from "../attestation/bridge_validator_pb";
import * as attestation_valset_updated_claim_status_pb from "../attestation/valset_updated_claim_status_pb";
import * as gogoproto_gogo_pb from "../gogoproto/gogo_pb";

export class ValsetUpdatedClaim extends jspb.Message {
  getChainid(): string;
  setChainid(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventnonce(): number;
  setEventnonce(value: number): void;

  getValsetnonce(): number;
  setValsetnonce(value: number): void;

  getBlockheight(): number;
  setBlockheight(value: number): void;

  getSourcetxhash(): string;
  setSourcetxhash(value: string): void;

  getStatus(): attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap[keyof attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap];
  setStatus(value: attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap[keyof attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ValsetUpdatedClaim.AsObject;
  static toObject(includeInstance: boolean, msg: ValsetUpdatedClaim): ValsetUpdatedClaim.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ValsetUpdatedClaim, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ValsetUpdatedClaim;
  static deserializeBinaryFromReader(message: ValsetUpdatedClaim, reader: jspb.BinaryReader): ValsetUpdatedClaim;
}

export namespace ValsetUpdatedClaim {
  export type AsObject = {
    chainid: string,
    contract: string,
    eventnonce: number,
    valsetnonce: number,
    blockheight: number,
    sourcetxhash: string,
    status: attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap[keyof attestation_valset_updated_claim_status_pb.ValsetUpdatedClaimStatusMap],
  }
}

export class ValsetUpdatedClaimHash extends jspb.Message {
  getChainid(): string;
  setChainid(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventnonce(): number;
  setEventnonce(value: number): void;

  getValsetnonce(): number;
  setValsetnonce(value: number): void;

  getBlockheight(): number;
  setBlockheight(value: number): void;

  clearMembersList(): void;
  getMembersList(): Array<attestation_bridge_validator_pb.BridgeValidator>;
  setMembersList(value: Array<attestation_bridge_validator_pb.BridgeValidator>): void;
  addMembers(value?: attestation_bridge_validator_pb.BridgeValidator, index?: number): attestation_bridge_validator_pb.BridgeValidator;

  getSourcetxhash(): string;
  setSourcetxhash(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ValsetUpdatedClaimHash.AsObject;
  static toObject(includeInstance: boolean, msg: ValsetUpdatedClaimHash): ValsetUpdatedClaimHash.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ValsetUpdatedClaimHash, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ValsetUpdatedClaimHash;
  static deserializeBinaryFromReader(message: ValsetUpdatedClaimHash, reader: jspb.BinaryReader): ValsetUpdatedClaimHash;
}

export namespace ValsetUpdatedClaimHash {
  export type AsObject = {
    chainid: string,
    contract: string,
    eventnonce: number,
    valsetnonce: number,
    blockheight: number,
    membersList: Array<attestation_bridge_validator_pb.BridgeValidator.AsObject>,
    sourcetxhash: string,
  }
}

