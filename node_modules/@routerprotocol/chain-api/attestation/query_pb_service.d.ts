// package: routerprotocol.routerchain.attestation
// file: attestation/query.proto

import * as attestation_query_pb from "../attestation/query_pb";
import {grpc} from "@improbable-eng/grpc-web";

type QueryParams = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryParamsRequest;
  readonly responseType: typeof attestation_query_pb.QueryParamsResponse;
};

type QueryValset = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryGetValsetRequest;
  readonly responseType: typeof attestation_query_pb.QueryGetValsetResponse;
};

type QueryValsetAll = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryAllValsetRequest;
  readonly responseType: typeof attestation_query_pb.QueryAllValsetResponse;
};

type QueryAttestation = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryGetAttestationRequest;
  readonly responseType: typeof attestation_query_pb.QueryGetAttestationResponse;
};

type QueryAttestationAll = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryAllAttestationRequest;
  readonly responseType: typeof attestation_query_pb.QueryAllAttestationResponse;
};

type QueryValsetConfirmation = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryGetValsetConfirmationRequest;
  readonly responseType: typeof attestation_query_pb.QueryGetValsetConfirmationResponse;
};

type QueryValsetConfirmationAll = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryAllValsetConfirmationRequest;
  readonly responseType: typeof attestation_query_pb.QueryAllValsetConfirmationResponse;
};

type QueryValsetUpdatedClaim = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryGetValsetUpdatedClaimRequest;
  readonly responseType: typeof attestation_query_pb.QueryGetValsetUpdatedClaimResponse;
};

type QueryValsetUpdatedClaimAll = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryAllValsetUpdatedClaimRequest;
  readonly responseType: typeof attestation_query_pb.QueryAllValsetUpdatedClaimResponse;
};

type QueryLatestValsetNonce = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryLatestValsetNonceRequest;
  readonly responseType: typeof attestation_query_pb.QueryLatestValsetNonceResponse;
};

type QueryLatestValset = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryLatestValsetRequest;
  readonly responseType: typeof attestation_query_pb.QueryLatestValsetResponse;
};

type QueryLastEventNonce = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryLastEventNonceRequest;
  readonly responseType: typeof attestation_query_pb.QueryLastEventNonceResponse;
};

type QueryListOrchestrators = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryListOrchestratorsRequest;
  readonly responseType: typeof attestation_query_pb.QueryListOrchestratorsResponse;
};

type QueryFetchOrchestratorValidator = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof attestation_query_pb.QueryFetchOrchestratorValidatorRequest;
  readonly responseType: typeof attestation_query_pb.QueryFetchOrchestratorValidatorResponse;
};

export class Query {
  static readonly serviceName: string;
  static readonly Params: QueryParams;
  static readonly Valset: QueryValset;
  static readonly ValsetAll: QueryValsetAll;
  static readonly Attestation: QueryAttestation;
  static readonly AttestationAll: QueryAttestationAll;
  static readonly ValsetConfirmation: QueryValsetConfirmation;
  static readonly ValsetConfirmationAll: QueryValsetConfirmationAll;
  static readonly ValsetUpdatedClaim: QueryValsetUpdatedClaim;
  static readonly ValsetUpdatedClaimAll: QueryValsetUpdatedClaimAll;
  static readonly LatestValsetNonce: QueryLatestValsetNonce;
  static readonly LatestValset: QueryLatestValset;
  static readonly LastEventNonce: QueryLastEventNonce;
  static readonly ListOrchestrators: QueryListOrchestrators;
  static readonly FetchOrchestratorValidator: QueryFetchOrchestratorValidator;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class QueryClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  params(
    requestMessage: attestation_query_pb.QueryParamsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryParamsResponse|null) => void
  ): UnaryResponse;
  params(
    requestMessage: attestation_query_pb.QueryParamsRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryParamsResponse|null) => void
  ): UnaryResponse;
  valset(
    requestMessage: attestation_query_pb.QueryGetValsetRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetResponse|null) => void
  ): UnaryResponse;
  valset(
    requestMessage: attestation_query_pb.QueryGetValsetRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetResponse|null) => void
  ): UnaryResponse;
  valsetAll(
    requestMessage: attestation_query_pb.QueryAllValsetRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetResponse|null) => void
  ): UnaryResponse;
  valsetAll(
    requestMessage: attestation_query_pb.QueryAllValsetRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetResponse|null) => void
  ): UnaryResponse;
  attestation(
    requestMessage: attestation_query_pb.QueryGetAttestationRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetAttestationResponse|null) => void
  ): UnaryResponse;
  attestation(
    requestMessage: attestation_query_pb.QueryGetAttestationRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetAttestationResponse|null) => void
  ): UnaryResponse;
  attestationAll(
    requestMessage: attestation_query_pb.QueryAllAttestationRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllAttestationResponse|null) => void
  ): UnaryResponse;
  attestationAll(
    requestMessage: attestation_query_pb.QueryAllAttestationRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllAttestationResponse|null) => void
  ): UnaryResponse;
  valsetConfirmation(
    requestMessage: attestation_query_pb.QueryGetValsetConfirmationRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetConfirmationResponse|null) => void
  ): UnaryResponse;
  valsetConfirmation(
    requestMessage: attestation_query_pb.QueryGetValsetConfirmationRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetConfirmationResponse|null) => void
  ): UnaryResponse;
  valsetConfirmationAll(
    requestMessage: attestation_query_pb.QueryAllValsetConfirmationRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetConfirmationResponse|null) => void
  ): UnaryResponse;
  valsetConfirmationAll(
    requestMessage: attestation_query_pb.QueryAllValsetConfirmationRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetConfirmationResponse|null) => void
  ): UnaryResponse;
  valsetUpdatedClaim(
    requestMessage: attestation_query_pb.QueryGetValsetUpdatedClaimRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetUpdatedClaimResponse|null) => void
  ): UnaryResponse;
  valsetUpdatedClaim(
    requestMessage: attestation_query_pb.QueryGetValsetUpdatedClaimRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryGetValsetUpdatedClaimResponse|null) => void
  ): UnaryResponse;
  valsetUpdatedClaimAll(
    requestMessage: attestation_query_pb.QueryAllValsetUpdatedClaimRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetUpdatedClaimResponse|null) => void
  ): UnaryResponse;
  valsetUpdatedClaimAll(
    requestMessage: attestation_query_pb.QueryAllValsetUpdatedClaimRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryAllValsetUpdatedClaimResponse|null) => void
  ): UnaryResponse;
  latestValsetNonce(
    requestMessage: attestation_query_pb.QueryLatestValsetNonceRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLatestValsetNonceResponse|null) => void
  ): UnaryResponse;
  latestValsetNonce(
    requestMessage: attestation_query_pb.QueryLatestValsetNonceRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLatestValsetNonceResponse|null) => void
  ): UnaryResponse;
  latestValset(
    requestMessage: attestation_query_pb.QueryLatestValsetRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLatestValsetResponse|null) => void
  ): UnaryResponse;
  latestValset(
    requestMessage: attestation_query_pb.QueryLatestValsetRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLatestValsetResponse|null) => void
  ): UnaryResponse;
  lastEventNonce(
    requestMessage: attestation_query_pb.QueryLastEventNonceRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLastEventNonceResponse|null) => void
  ): UnaryResponse;
  lastEventNonce(
    requestMessage: attestation_query_pb.QueryLastEventNonceRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryLastEventNonceResponse|null) => void
  ): UnaryResponse;
  listOrchestrators(
    requestMessage: attestation_query_pb.QueryListOrchestratorsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryListOrchestratorsResponse|null) => void
  ): UnaryResponse;
  listOrchestrators(
    requestMessage: attestation_query_pb.QueryListOrchestratorsRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryListOrchestratorsResponse|null) => void
  ): UnaryResponse;
  fetchOrchestratorValidator(
    requestMessage: attestation_query_pb.QueryFetchOrchestratorValidatorRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryFetchOrchestratorValidatorResponse|null) => void
  ): UnaryResponse;
  fetchOrchestratorValidator(
    requestMessage: attestation_query_pb.QueryFetchOrchestratorValidatorRequest,
    callback: (error: ServiceError|null, responseMessage: attestation_query_pb.QueryFetchOrchestratorValidatorResponse|null) => void
  ): UnaryResponse;
}

