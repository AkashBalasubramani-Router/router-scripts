// source: attestation/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var attestation_params_pb = require('../attestation/params_pb.js');
goog.object.extend(proto, attestation_params_pb);
var attestation_valset_pb = require('../attestation/valset_pb.js');
goog.object.extend(proto, attestation_valset_pb);
var attestation_attestation_pb = require('../attestation/attestation_pb.js');
goog.object.extend(proto, attestation_attestation_pb);
var attestation_valset_confirmation_pb = require('../attestation/valset_confirmation_pb.js');
goog.object.extend(proto, attestation_valset_confirmation_pb);
var attestation_tx_pb = require('../attestation/tx_pb.js');
goog.object.extend(proto, attestation_tx_pb);
var cosmos_staking_v1beta1_staking_pb = require('../cosmos/staking/v1beta1/staking_pb.js');
goog.object.extend(proto, cosmos_staking_v1beta1_staking_pb);
var attestation_valset_updated_claim_pb = require('../attestation/valset_updated_claim_pb.js');
goog.object.extend(proto, attestation_valset_updated_claim_pb);
var attestation_bridge_validator_pb = require('../attestation/bridge_validator_pb.js');
goog.object.extend(proto, attestation_bridge_validator_pb);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryParamsRequest', null, global);
goog.exportSymbol('proto.routerprotocol.routerchain.attestation.QueryParamsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryParamsRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryParamsResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryParamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.repeatedFields_, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.displayName = 'proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.displayName = 'proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryParamsRequest;
  return proto.routerprotocol.routerchain.attestation.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && attestation_params_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryParamsResponse;
  return proto.routerprotocol.routerchain.attestation.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_params_pb.Params;
      reader.readMessage(value,attestation_params_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_params_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.Params}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.Params} */ (
    jspb.Message.getWrapperField(this, attestation_params_pb.Params, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.Params|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryParamsResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryParamsResponse.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 nonce = 1;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetRequest.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valset: (f = msg.getValset()) && attestation_valset_pb.Valset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_pb.Valset;
      reader.readMessage(value,attestation_valset_pb.Valset.deserializeBinaryFromReader);
      msg.setValset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_valset_pb.Valset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Valset valset = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.Valset}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.getValset = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.Valset} */ (
    jspb.Message.getWrapperField(this, attestation_valset_pb.Valset, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.Valset|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.setValset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.clearValset = function() {
  return this.setValset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetResponse.prototype.hasValset = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetList: jspb.Message.toObjectList(msg.getValsetList(),
    attestation_valset_pb.Valset.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_pb.Valset;
      reader.readMessage(value,attestation_valset_pb.Valset.deserializeBinaryFromReader);
      msg.addValset(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      attestation_valset_pb.Valset.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Valset valset = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.Valset>}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.getValsetList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.Valset>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_valset_pb.Valset, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.Valset>} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.setValsetList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.Valset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.Valset}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.addValset = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.attestation.Valset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.clearValsetList = function() {
  return this.setValsetList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventNonce: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest;
  return proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventNonce();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract = 2;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.setContract = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 event_nonce = 3;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.getEventNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationRequest.prototype.setEventNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    attestation: (f = msg.getAttestation()) && attestation_attestation_pb.Attestation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse;
  return proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_attestation_pb.Attestation;
      reader.readMessage(value,attestation_attestation_pb.Attestation.deserializeBinaryFromReader);
      msg.setAttestation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttestation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_attestation_pb.Attestation.serializeBinaryToWriter
    );
  }
};


/**
 * optional Attestation attestation = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.Attestation}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.getAttestation = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.Attestation} */ (
    jspb.Message.getWrapperField(this, attestation_attestation_pb.Attestation, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.Attestation|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.setAttestation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.clearAttestation = function() {
  return this.setAttestation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryGetAttestationResponse.prototype.hasAttestation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest;
  return proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    attestationList: jspb.Message.toObjectList(msg.getAttestationList(),
    attestation_attestation_pb.Attestation.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse;
  return proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_attestation_pb.Attestation;
      reader.readMessage(value,attestation_attestation_pb.Attestation.deserializeBinaryFromReader);
      msg.addAttestation(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttestationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      attestation_attestation_pb.Attestation.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Attestation attestation = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.Attestation>}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.getAttestationList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.Attestation>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_attestation_pb.Attestation, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.Attestation>} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.setAttestationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.Attestation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.Attestation}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.addAttestation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.attestation.Attestation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.clearAttestationList = function() {
  return this.setAttestationList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllAttestationResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetNonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orchestrator: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValsetNonce(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestrator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetNonce();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOrchestrator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 valset_nonce = 1;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.getValsetNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.setValsetNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string orchestrator = 2;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.getOrchestrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationRequest.prototype.setOrchestrator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetconfirmation: (f = msg.getValsetconfirmation()) && attestation_valset_confirmation_pb.ValsetConfirmation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_confirmation_pb.ValsetConfirmation;
      reader.readMessage(value,attestation_valset_confirmation_pb.ValsetConfirmation.deserializeBinaryFromReader);
      msg.setValsetconfirmation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetconfirmation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_valset_confirmation_pb.ValsetConfirmation.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValsetConfirmation valsetConfirmation = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.ValsetConfirmation}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.getValsetconfirmation = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.ValsetConfirmation} */ (
    jspb.Message.getWrapperField(this, attestation_valset_confirmation_pb.ValsetConfirmation, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.ValsetConfirmation|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.setValsetconfirmation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.clearValsetconfirmation = function() {
  return this.setValsetconfirmation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetConfirmationResponse.prototype.hasValsetconfirmation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetNonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValsetNonce(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetNonce();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 valset_nonce = 1;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.getValsetNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.setValsetNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetconfirmationList: jspb.Message.toObjectList(msg.getValsetconfirmationList(),
    attestation_valset_confirmation_pb.ValsetConfirmation.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_confirmation_pb.ValsetConfirmation;
      reader.readMessage(value,attestation_valset_confirmation_pb.ValsetConfirmation.deserializeBinaryFromReader);
      msg.addValsetconfirmation(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetconfirmationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      attestation_valset_confirmation_pb.ValsetConfirmation.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValsetConfirmation valsetConfirmation = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.ValsetConfirmation>}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.getValsetconfirmationList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.ValsetConfirmation>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_valset_confirmation_pb.ValsetConfirmation, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.ValsetConfirmation>} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.setValsetconfirmationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.ValsetConfirmation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.ValsetConfirmation}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.addValsetconfirmation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.attestation.ValsetConfirmation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.clearValsetconfirmationList = function() {
  return this.setValsetconfirmationList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetConfirmationResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eventNonce: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventNonce();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 event_nonce = 3;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.getEventNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimRequest.prototype.setEventNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetupdatedclaim: (f = msg.getValsetupdatedclaim()) && attestation_valset_updated_claim_pb.ValsetUpdatedClaim.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse;
  return proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_updated_claim_pb.ValsetUpdatedClaim;
      reader.readMessage(value,attestation_valset_updated_claim_pb.ValsetUpdatedClaim.deserializeBinaryFromReader);
      msg.setValsetupdatedclaim(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetupdatedclaim();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_valset_updated_claim_pb.ValsetUpdatedClaim.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValsetUpdatedClaim valsetUpdatedClaim = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.getValsetupdatedclaim = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim} */ (
    jspb.Message.getWrapperField(this, attestation_valset_updated_claim_pb.ValsetUpdatedClaim, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.setValsetupdatedclaim = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.clearValsetupdatedclaim = function() {
  return this.setValsetupdatedclaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryGetValsetUpdatedClaimResponse.prototype.hasValsetupdatedclaim = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetupdatedclaimList: jspb.Message.toObjectList(msg.getValsetupdatedclaimList(),
    attestation_valset_updated_claim_pb.ValsetUpdatedClaim.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse;
  return proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_updated_claim_pb.ValsetUpdatedClaim;
      reader.readMessage(value,attestation_valset_updated_claim_pb.ValsetUpdatedClaim.deserializeBinaryFromReader);
      msg.addValsetupdatedclaim(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetupdatedclaimList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      attestation_valset_updated_claim_pb.ValsetUpdatedClaim.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValsetUpdatedClaim valsetUpdatedClaim = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim>}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.getValsetupdatedclaimList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_valset_updated_claim_pb.ValsetUpdatedClaim, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim>} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.setValsetupdatedclaimList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.addValsetupdatedclaim = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.attestation.ValsetUpdatedClaim, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.clearValsetupdatedclaimList = function() {
  return this.setValsetupdatedclaimList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryAllValsetUpdatedClaimResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest;
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsetnonce: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse;
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValsetnonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsetnonce();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 valsetNonce = 1;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.prototype.getValsetnonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetNonceResponse.prototype.setValsetnonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest;
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valset: (f = msg.getValset()) && attestation_valset_pb.Valset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse;
  return proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_valset_pb.Valset;
      reader.readMessage(value,attestation_valset_pb.Valset.deserializeBinaryFromReader);
      msg.setValset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      attestation_valset_pb.Valset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Valset valset = 1;
 * @return {?proto.routerprotocol.routerchain.attestation.Valset}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.getValset = function() {
  return /** @type{?proto.routerprotocol.routerchain.attestation.Valset} */ (
    jspb.Message.getWrapperField(this, attestation_valset_pb.Valset, 1));
};


/**
 * @param {?proto.routerprotocol.routerchain.attestation.Valset|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.setValset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.clearValset = function() {
  return this.setValset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryLatestValsetResponse.prototype.hasValset = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contract: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validatorAddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest;
  return proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContract(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContract();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contract = 2;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.getContract = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.setContract = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string validator_address = 3;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceRequest.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventnonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventheight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse;
  return proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventnonce(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventnonce();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventheight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 eventNonce = 1;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.getEventnonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.setEventnonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 eventHeight = 2;
 * @return {number}
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.getEventheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryLastEventNonceResponse.prototype.setEventheight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest;
  return proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orchestratorSetList: jspb.Message.toObjectList(msg.getOrchestratorSetList(),
    attestation_tx_pb.MsgSetOrchestratorAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse;
  return proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new attestation_tx_pb.MsgSetOrchestratorAddress;
      reader.readMessage(value,attestation_tx_pb.MsgSetOrchestratorAddress.deserializeBinaryFromReader);
      msg.addOrchestratorSet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrchestratorSetList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      attestation_tx_pb.MsgSetOrchestratorAddress.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MsgSetOrchestratorAddress orchestrator_set = 1;
 * @return {!Array<!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress>}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.getOrchestratorSetList = function() {
  return /** @type{!Array<!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, attestation_tx_pb.MsgSetOrchestratorAddress, 1));
};


/**
 * @param {!Array<!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress>} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.setOrchestratorSetList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress}
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.addOrchestratorSet = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.routerprotocol.routerchain.attestation.MsgSetOrchestratorAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryListOrchestratorsResponse.prototype.clearOrchestratorSetList = function() {
  return this.setOrchestratorSetList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest;
  return proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestratorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrchestratorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string orchestrator_address = 1;
 * @return {string}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.prototype.getOrchestratorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorRequest.prototype.setOrchestratorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: (f = msg.getValidator()) && cosmos_staking_v1beta1_staking_pb.Validator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse;
  return proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_staking_v1beta1_staking_pb.Validator;
      reader.readMessage(value,cosmos_staking_v1beta1_staking_pb.Validator.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_staking_v1beta1_staking_pb.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.staking.v1beta1.Validator validator = 1;
 * @return {?proto.cosmos.staking.v1beta1.Validator}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.getValidator = function() {
  return /** @type{?proto.cosmos.staking.v1beta1.Validator} */ (
    jspb.Message.getWrapperField(this, cosmos_staking_v1beta1_staking_pb.Validator, 1));
};


/**
 * @param {?proto.cosmos.staking.v1beta1.Validator|undefined} value
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse} returns this
*/
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse} returns this
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.routerprotocol.routerchain.attestation.QueryFetchOrchestratorValidatorResponse.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.routerprotocol.routerchain.attestation);
