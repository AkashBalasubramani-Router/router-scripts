// package: ethermint.evm.v1
// file: ethermint/evm/v1/query.proto

import * as ethermint_evm_v1_query_pb from "../../../ethermint/evm/v1/query_pb";
import * as ethermint_evm_v1_tx_pb from "../../../ethermint/evm/v1/tx_pb";
import {grpc} from "@improbable-eng/grpc-web";

type QueryAccount = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryAccountRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryAccountResponse;
};

type QueryCosmosAccount = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryCosmosAccountRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryCosmosAccountResponse;
};

type QueryValidatorAccount = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryValidatorAccountRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryValidatorAccountResponse;
};

type QueryBalance = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryBalanceRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryBalanceResponse;
};

type QueryStorage = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryStorageRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryStorageResponse;
};

type QueryCode = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryCodeRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryCodeResponse;
};

type QueryParams = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryParamsRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryParamsResponse;
};

type QueryEthCall = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.EthCallRequest;
  readonly responseType: typeof ethermint_evm_v1_tx_pb.MsgEthereumTxResponse;
};

type QueryEstimateGas = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.EthCallRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.EstimateGasResponse;
};

type QueryTraceTx = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryTraceTxRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryTraceTxResponse;
};

type QueryTraceBlock = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryTraceBlockRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryTraceBlockResponse;
};

type QueryBaseFee = {
  readonly methodName: string;
  readonly service: typeof Query;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof ethermint_evm_v1_query_pb.QueryBaseFeeRequest;
  readonly responseType: typeof ethermint_evm_v1_query_pb.QueryBaseFeeResponse;
};

export class Query {
  static readonly serviceName: string;
  static readonly Account: QueryAccount;
  static readonly CosmosAccount: QueryCosmosAccount;
  static readonly ValidatorAccount: QueryValidatorAccount;
  static readonly Balance: QueryBalance;
  static readonly Storage: QueryStorage;
  static readonly Code: QueryCode;
  static readonly Params: QueryParams;
  static readonly EthCall: QueryEthCall;
  static readonly EstimateGas: QueryEstimateGas;
  static readonly TraceTx: QueryTraceTx;
  static readonly TraceBlock: QueryTraceBlock;
  static readonly BaseFee: QueryBaseFee;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class QueryClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  account(
    requestMessage: ethermint_evm_v1_query_pb.QueryAccountRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryAccountResponse|null) => void
  ): UnaryResponse;
  account(
    requestMessage: ethermint_evm_v1_query_pb.QueryAccountRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryAccountResponse|null) => void
  ): UnaryResponse;
  cosmosAccount(
    requestMessage: ethermint_evm_v1_query_pb.QueryCosmosAccountRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryCosmosAccountResponse|null) => void
  ): UnaryResponse;
  cosmosAccount(
    requestMessage: ethermint_evm_v1_query_pb.QueryCosmosAccountRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryCosmosAccountResponse|null) => void
  ): UnaryResponse;
  validatorAccount(
    requestMessage: ethermint_evm_v1_query_pb.QueryValidatorAccountRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryValidatorAccountResponse|null) => void
  ): UnaryResponse;
  validatorAccount(
    requestMessage: ethermint_evm_v1_query_pb.QueryValidatorAccountRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryValidatorAccountResponse|null) => void
  ): UnaryResponse;
  balance(
    requestMessage: ethermint_evm_v1_query_pb.QueryBalanceRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryBalanceResponse|null) => void
  ): UnaryResponse;
  balance(
    requestMessage: ethermint_evm_v1_query_pb.QueryBalanceRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryBalanceResponse|null) => void
  ): UnaryResponse;
  storage(
    requestMessage: ethermint_evm_v1_query_pb.QueryStorageRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryStorageResponse|null) => void
  ): UnaryResponse;
  storage(
    requestMessage: ethermint_evm_v1_query_pb.QueryStorageRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryStorageResponse|null) => void
  ): UnaryResponse;
  code(
    requestMessage: ethermint_evm_v1_query_pb.QueryCodeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryCodeResponse|null) => void
  ): UnaryResponse;
  code(
    requestMessage: ethermint_evm_v1_query_pb.QueryCodeRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryCodeResponse|null) => void
  ): UnaryResponse;
  params(
    requestMessage: ethermint_evm_v1_query_pb.QueryParamsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryParamsResponse|null) => void
  ): UnaryResponse;
  params(
    requestMessage: ethermint_evm_v1_query_pb.QueryParamsRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryParamsResponse|null) => void
  ): UnaryResponse;
  ethCall(
    requestMessage: ethermint_evm_v1_query_pb.EthCallRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_tx_pb.MsgEthereumTxResponse|null) => void
  ): UnaryResponse;
  ethCall(
    requestMessage: ethermint_evm_v1_query_pb.EthCallRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_tx_pb.MsgEthereumTxResponse|null) => void
  ): UnaryResponse;
  estimateGas(
    requestMessage: ethermint_evm_v1_query_pb.EthCallRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.EstimateGasResponse|null) => void
  ): UnaryResponse;
  estimateGas(
    requestMessage: ethermint_evm_v1_query_pb.EthCallRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.EstimateGasResponse|null) => void
  ): UnaryResponse;
  traceTx(
    requestMessage: ethermint_evm_v1_query_pb.QueryTraceTxRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryTraceTxResponse|null) => void
  ): UnaryResponse;
  traceTx(
    requestMessage: ethermint_evm_v1_query_pb.QueryTraceTxRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryTraceTxResponse|null) => void
  ): UnaryResponse;
  traceBlock(
    requestMessage: ethermint_evm_v1_query_pb.QueryTraceBlockRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryTraceBlockResponse|null) => void
  ): UnaryResponse;
  traceBlock(
    requestMessage: ethermint_evm_v1_query_pb.QueryTraceBlockRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryTraceBlockResponse|null) => void
  ): UnaryResponse;
  baseFee(
    requestMessage: ethermint_evm_v1_query_pb.QueryBaseFeeRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryBaseFeeResponse|null) => void
  ): UnaryResponse;
  baseFee(
    requestMessage: ethermint_evm_v1_query_pb.QueryBaseFeeRequest,
    callback: (error: ServiceError|null, responseMessage: ethermint_evm_v1_query_pb.QueryBaseFeeResponse|null) => void
  ): UnaryResponse;
}

