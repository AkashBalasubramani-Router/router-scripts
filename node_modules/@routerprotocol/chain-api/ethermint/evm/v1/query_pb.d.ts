// package: ethermint.evm.v1
// file: ethermint/evm/v1/query.proto

import * as jspb from "google-protobuf";
import * as cosmos_base_query_v1beta1_pagination_pb from "../../../cosmos/base/query/v1beta1/pagination_pb";
import * as ethermint_evm_v1_evm_pb from "../../../ethermint/evm/v1/evm_pb";
import * as ethermint_evm_v1_tx_pb from "../../../ethermint/evm/v1/tx_pb";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";
import * as google_api_annotations_pb from "../../../google/api/annotations_pb";
import * as google_protobuf_timestamp_pb from "google-protobuf/google/protobuf/timestamp_pb";

export class QueryAccountRequest extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAccountRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAccountRequest): QueryAccountRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAccountRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAccountRequest;
  static deserializeBinaryFromReader(message: QueryAccountRequest, reader: jspb.BinaryReader): QueryAccountRequest;
}

export namespace QueryAccountRequest {
  export type AsObject = {
    address: string,
  }
}

export class QueryAccountResponse extends jspb.Message {
  getBalance(): string;
  setBalance(value: string): void;

  getCodeHash(): string;
  setCodeHash(value: string): void;

  getNonce(): number;
  setNonce(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryAccountResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryAccountResponse): QueryAccountResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryAccountResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryAccountResponse;
  static deserializeBinaryFromReader(message: QueryAccountResponse, reader: jspb.BinaryReader): QueryAccountResponse;
}

export namespace QueryAccountResponse {
  export type AsObject = {
    balance: string,
    codeHash: string,
    nonce: number,
  }
}

export class QueryCosmosAccountRequest extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryCosmosAccountRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryCosmosAccountRequest): QueryCosmosAccountRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryCosmosAccountRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryCosmosAccountRequest;
  static deserializeBinaryFromReader(message: QueryCosmosAccountRequest, reader: jspb.BinaryReader): QueryCosmosAccountRequest;
}

export namespace QueryCosmosAccountRequest {
  export type AsObject = {
    address: string,
  }
}

export class QueryCosmosAccountResponse extends jspb.Message {
  getCosmosAddress(): string;
  setCosmosAddress(value: string): void;

  getSequence(): number;
  setSequence(value: number): void;

  getAccountNumber(): number;
  setAccountNumber(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryCosmosAccountResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryCosmosAccountResponse): QueryCosmosAccountResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryCosmosAccountResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryCosmosAccountResponse;
  static deserializeBinaryFromReader(message: QueryCosmosAccountResponse, reader: jspb.BinaryReader): QueryCosmosAccountResponse;
}

export namespace QueryCosmosAccountResponse {
  export type AsObject = {
    cosmosAddress: string,
    sequence: number,
    accountNumber: number,
  }
}

export class QueryValidatorAccountRequest extends jspb.Message {
  getConsAddress(): string;
  setConsAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryValidatorAccountRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryValidatorAccountRequest): QueryValidatorAccountRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryValidatorAccountRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryValidatorAccountRequest;
  static deserializeBinaryFromReader(message: QueryValidatorAccountRequest, reader: jspb.BinaryReader): QueryValidatorAccountRequest;
}

export namespace QueryValidatorAccountRequest {
  export type AsObject = {
    consAddress: string,
  }
}

export class QueryValidatorAccountResponse extends jspb.Message {
  getAccountAddress(): string;
  setAccountAddress(value: string): void;

  getSequence(): number;
  setSequence(value: number): void;

  getAccountNumber(): number;
  setAccountNumber(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryValidatorAccountResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryValidatorAccountResponse): QueryValidatorAccountResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryValidatorAccountResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryValidatorAccountResponse;
  static deserializeBinaryFromReader(message: QueryValidatorAccountResponse, reader: jspb.BinaryReader): QueryValidatorAccountResponse;
}

export namespace QueryValidatorAccountResponse {
  export type AsObject = {
    accountAddress: string,
    sequence: number,
    accountNumber: number,
  }
}

export class QueryBalanceRequest extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBalanceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBalanceRequest): QueryBalanceRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBalanceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBalanceRequest;
  static deserializeBinaryFromReader(message: QueryBalanceRequest, reader: jspb.BinaryReader): QueryBalanceRequest;
}

export namespace QueryBalanceRequest {
  export type AsObject = {
    address: string,
  }
}

export class QueryBalanceResponse extends jspb.Message {
  getBalance(): string;
  setBalance(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBalanceResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBalanceResponse): QueryBalanceResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBalanceResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBalanceResponse;
  static deserializeBinaryFromReader(message: QueryBalanceResponse, reader: jspb.BinaryReader): QueryBalanceResponse;
}

export namespace QueryBalanceResponse {
  export type AsObject = {
    balance: string,
  }
}

export class QueryStorageRequest extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  getKey(): string;
  setKey(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryStorageRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryStorageRequest): QueryStorageRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryStorageRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryStorageRequest;
  static deserializeBinaryFromReader(message: QueryStorageRequest, reader: jspb.BinaryReader): QueryStorageRequest;
}

export namespace QueryStorageRequest {
  export type AsObject = {
    address: string,
    key: string,
  }
}

export class QueryStorageResponse extends jspb.Message {
  getValue(): string;
  setValue(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryStorageResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryStorageResponse): QueryStorageResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryStorageResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryStorageResponse;
  static deserializeBinaryFromReader(message: QueryStorageResponse, reader: jspb.BinaryReader): QueryStorageResponse;
}

export namespace QueryStorageResponse {
  export type AsObject = {
    value: string,
  }
}

export class QueryCodeRequest extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryCodeRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryCodeRequest): QueryCodeRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryCodeRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryCodeRequest;
  static deserializeBinaryFromReader(message: QueryCodeRequest, reader: jspb.BinaryReader): QueryCodeRequest;
}

export namespace QueryCodeRequest {
  export type AsObject = {
    address: string,
  }
}

export class QueryCodeResponse extends jspb.Message {
  getCode(): Uint8Array | string;
  getCode_asU8(): Uint8Array;
  getCode_asB64(): string;
  setCode(value: Uint8Array | string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryCodeResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryCodeResponse): QueryCodeResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryCodeResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryCodeResponse;
  static deserializeBinaryFromReader(message: QueryCodeResponse, reader: jspb.BinaryReader): QueryCodeResponse;
}

export namespace QueryCodeResponse {
  export type AsObject = {
    code: Uint8Array | string,
  }
}

export class QueryTxLogsRequest extends jspb.Message {
  getHash(): string;
  setHash(value: string): void;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageRequest | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTxLogsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTxLogsRequest): QueryTxLogsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTxLogsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTxLogsRequest;
  static deserializeBinaryFromReader(message: QueryTxLogsRequest, reader: jspb.BinaryReader): QueryTxLogsRequest;
}

export namespace QueryTxLogsRequest {
  export type AsObject = {
    hash: string,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageRequest.AsObject,
  }
}

export class QueryTxLogsResponse extends jspb.Message {
  clearLogsList(): void;
  getLogsList(): Array<ethermint_evm_v1_evm_pb.Log>;
  setLogsList(value: Array<ethermint_evm_v1_evm_pb.Log>): void;
  addLogs(value?: ethermint_evm_v1_evm_pb.Log, index?: number): ethermint_evm_v1_evm_pb.Log;

  hasPagination(): boolean;
  clearPagination(): void;
  getPagination(): cosmos_base_query_v1beta1_pagination_pb.PageResponse | undefined;
  setPagination(value?: cosmos_base_query_v1beta1_pagination_pb.PageResponse): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTxLogsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTxLogsResponse): QueryTxLogsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTxLogsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTxLogsResponse;
  static deserializeBinaryFromReader(message: QueryTxLogsResponse, reader: jspb.BinaryReader): QueryTxLogsResponse;
}

export namespace QueryTxLogsResponse {
  export type AsObject = {
    logsList: Array<ethermint_evm_v1_evm_pb.Log.AsObject>,
    pagination?: cosmos_base_query_v1beta1_pagination_pb.PageResponse.AsObject,
  }
}

export class QueryParamsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsRequest): QueryParamsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsRequest;
  static deserializeBinaryFromReader(message: QueryParamsRequest, reader: jspb.BinaryReader): QueryParamsRequest;
}

export namespace QueryParamsRequest {
  export type AsObject = {
  }
}

export class QueryParamsResponse extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): ethermint_evm_v1_evm_pb.Params | undefined;
  setParams(value?: ethermint_evm_v1_evm_pb.Params): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsResponse): QueryParamsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsResponse;
  static deserializeBinaryFromReader(message: QueryParamsResponse, reader: jspb.BinaryReader): QueryParamsResponse;
}

export namespace QueryParamsResponse {
  export type AsObject = {
    params?: ethermint_evm_v1_evm_pb.Params.AsObject,
  }
}

export class EthCallRequest extends jspb.Message {
  getArgs(): Uint8Array | string;
  getArgs_asU8(): Uint8Array;
  getArgs_asB64(): string;
  setArgs(value: Uint8Array | string): void;

  getGasCap(): number;
  setGasCap(value: number): void;

  getProposerAddress(): Uint8Array | string;
  getProposerAddress_asU8(): Uint8Array;
  getProposerAddress_asB64(): string;
  setProposerAddress(value: Uint8Array | string): void;

  getChainId(): number;
  setChainId(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): EthCallRequest.AsObject;
  static toObject(includeInstance: boolean, msg: EthCallRequest): EthCallRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: EthCallRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): EthCallRequest;
  static deserializeBinaryFromReader(message: EthCallRequest, reader: jspb.BinaryReader): EthCallRequest;
}

export namespace EthCallRequest {
  export type AsObject = {
    args: Uint8Array | string,
    gasCap: number,
    proposerAddress: Uint8Array | string,
    chainId: number,
  }
}

export class EstimateGasResponse extends jspb.Message {
  getGas(): number;
  setGas(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): EstimateGasResponse.AsObject;
  static toObject(includeInstance: boolean, msg: EstimateGasResponse): EstimateGasResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: EstimateGasResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): EstimateGasResponse;
  static deserializeBinaryFromReader(message: EstimateGasResponse, reader: jspb.BinaryReader): EstimateGasResponse;
}

export namespace EstimateGasResponse {
  export type AsObject = {
    gas: number,
  }
}

export class QueryTraceTxRequest extends jspb.Message {
  hasMsg(): boolean;
  clearMsg(): void;
  getMsg(): ethermint_evm_v1_tx_pb.MsgEthereumTx | undefined;
  setMsg(value?: ethermint_evm_v1_tx_pb.MsgEthereumTx): void;

  hasTraceConfig(): boolean;
  clearTraceConfig(): void;
  getTraceConfig(): ethermint_evm_v1_evm_pb.TraceConfig | undefined;
  setTraceConfig(value?: ethermint_evm_v1_evm_pb.TraceConfig): void;

  clearPredecessorsList(): void;
  getPredecessorsList(): Array<ethermint_evm_v1_tx_pb.MsgEthereumTx>;
  setPredecessorsList(value: Array<ethermint_evm_v1_tx_pb.MsgEthereumTx>): void;
  addPredecessors(value?: ethermint_evm_v1_tx_pb.MsgEthereumTx, index?: number): ethermint_evm_v1_tx_pb.MsgEthereumTx;

  getBlockNumber(): number;
  setBlockNumber(value: number): void;

  getBlockHash(): string;
  setBlockHash(value: string): void;

  hasBlockTime(): boolean;
  clearBlockTime(): void;
  getBlockTime(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setBlockTime(value?: google_protobuf_timestamp_pb.Timestamp): void;

  getProposerAddress(): Uint8Array | string;
  getProposerAddress_asU8(): Uint8Array;
  getProposerAddress_asB64(): string;
  setProposerAddress(value: Uint8Array | string): void;

  getChainId(): number;
  setChainId(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTraceTxRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTraceTxRequest): QueryTraceTxRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTraceTxRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTraceTxRequest;
  static deserializeBinaryFromReader(message: QueryTraceTxRequest, reader: jspb.BinaryReader): QueryTraceTxRequest;
}

export namespace QueryTraceTxRequest {
  export type AsObject = {
    msg?: ethermint_evm_v1_tx_pb.MsgEthereumTx.AsObject,
    traceConfig?: ethermint_evm_v1_evm_pb.TraceConfig.AsObject,
    predecessorsList: Array<ethermint_evm_v1_tx_pb.MsgEthereumTx.AsObject>,
    blockNumber: number,
    blockHash: string,
    blockTime?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    proposerAddress: Uint8Array | string,
    chainId: number,
  }
}

export class QueryTraceTxResponse extends jspb.Message {
  getData(): Uint8Array | string;
  getData_asU8(): Uint8Array;
  getData_asB64(): string;
  setData(value: Uint8Array | string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTraceTxResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTraceTxResponse): QueryTraceTxResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTraceTxResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTraceTxResponse;
  static deserializeBinaryFromReader(message: QueryTraceTxResponse, reader: jspb.BinaryReader): QueryTraceTxResponse;
}

export namespace QueryTraceTxResponse {
  export type AsObject = {
    data: Uint8Array | string,
  }
}

export class QueryTraceBlockRequest extends jspb.Message {
  clearTxsList(): void;
  getTxsList(): Array<ethermint_evm_v1_tx_pb.MsgEthereumTx>;
  setTxsList(value: Array<ethermint_evm_v1_tx_pb.MsgEthereumTx>): void;
  addTxs(value?: ethermint_evm_v1_tx_pb.MsgEthereumTx, index?: number): ethermint_evm_v1_tx_pb.MsgEthereumTx;

  hasTraceConfig(): boolean;
  clearTraceConfig(): void;
  getTraceConfig(): ethermint_evm_v1_evm_pb.TraceConfig | undefined;
  setTraceConfig(value?: ethermint_evm_v1_evm_pb.TraceConfig): void;

  getBlockNumber(): number;
  setBlockNumber(value: number): void;

  getBlockHash(): string;
  setBlockHash(value: string): void;

  hasBlockTime(): boolean;
  clearBlockTime(): void;
  getBlockTime(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setBlockTime(value?: google_protobuf_timestamp_pb.Timestamp): void;

  getProposerAddress(): Uint8Array | string;
  getProposerAddress_asU8(): Uint8Array;
  getProposerAddress_asB64(): string;
  setProposerAddress(value: Uint8Array | string): void;

  getChainId(): number;
  setChainId(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTraceBlockRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTraceBlockRequest): QueryTraceBlockRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTraceBlockRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTraceBlockRequest;
  static deserializeBinaryFromReader(message: QueryTraceBlockRequest, reader: jspb.BinaryReader): QueryTraceBlockRequest;
}

export namespace QueryTraceBlockRequest {
  export type AsObject = {
    txsList: Array<ethermint_evm_v1_tx_pb.MsgEthereumTx.AsObject>,
    traceConfig?: ethermint_evm_v1_evm_pb.TraceConfig.AsObject,
    blockNumber: number,
    blockHash: string,
    blockTime?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    proposerAddress: Uint8Array | string,
    chainId: number,
  }
}

export class QueryTraceBlockResponse extends jspb.Message {
  getData(): Uint8Array | string;
  getData_asU8(): Uint8Array;
  getData_asB64(): string;
  setData(value: Uint8Array | string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryTraceBlockResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryTraceBlockResponse): QueryTraceBlockResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryTraceBlockResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryTraceBlockResponse;
  static deserializeBinaryFromReader(message: QueryTraceBlockResponse, reader: jspb.BinaryReader): QueryTraceBlockResponse;
}

export namespace QueryTraceBlockResponse {
  export type AsObject = {
    data: Uint8Array | string,
  }
}

export class QueryBaseFeeRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBaseFeeRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBaseFeeRequest): QueryBaseFeeRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBaseFeeRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBaseFeeRequest;
  static deserializeBinaryFromReader(message: QueryBaseFeeRequest, reader: jspb.BinaryReader): QueryBaseFeeRequest;
}

export namespace QueryBaseFeeRequest {
  export type AsObject = {
  }
}

export class QueryBaseFeeResponse extends jspb.Message {
  getBaseFee(): string;
  setBaseFee(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBaseFeeResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBaseFeeResponse): QueryBaseFeeResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBaseFeeResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBaseFeeResponse;
  static deserializeBinaryFromReader(message: QueryBaseFeeResponse, reader: jspb.BinaryReader): QueryBaseFeeResponse;
}

export namespace QueryBaseFeeResponse {
  export type AsObject = {
    baseFee: string,
  }
}

