// package: ethermint.feemarket.v1
// file: ethermint/feemarket/v1/query.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";
import * as ethermint_feemarket_v1_feemarket_pb from "../../../ethermint/feemarket/v1/feemarket_pb";
import * as google_api_annotations_pb from "../../../google/api/annotations_pb";

export class QueryParamsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsRequest): QueryParamsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsRequest;
  static deserializeBinaryFromReader(message: QueryParamsRequest, reader: jspb.BinaryReader): QueryParamsRequest;
}

export namespace QueryParamsRequest {
  export type AsObject = {
  }
}

export class QueryParamsResponse extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): ethermint_feemarket_v1_feemarket_pb.Params | undefined;
  setParams(value?: ethermint_feemarket_v1_feemarket_pb.Params): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryParamsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryParamsResponse): QueryParamsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryParamsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryParamsResponse;
  static deserializeBinaryFromReader(message: QueryParamsResponse, reader: jspb.BinaryReader): QueryParamsResponse;
}

export namespace QueryParamsResponse {
  export type AsObject = {
    params?: ethermint_feemarket_v1_feemarket_pb.Params.AsObject,
  }
}

export class QueryBaseFeeRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBaseFeeRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBaseFeeRequest): QueryBaseFeeRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBaseFeeRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBaseFeeRequest;
  static deserializeBinaryFromReader(message: QueryBaseFeeRequest, reader: jspb.BinaryReader): QueryBaseFeeRequest;
}

export namespace QueryBaseFeeRequest {
  export type AsObject = {
  }
}

export class QueryBaseFeeResponse extends jspb.Message {
  getBaseFee(): string;
  setBaseFee(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBaseFeeResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBaseFeeResponse): QueryBaseFeeResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBaseFeeResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBaseFeeResponse;
  static deserializeBinaryFromReader(message: QueryBaseFeeResponse, reader: jspb.BinaryReader): QueryBaseFeeResponse;
}

export namespace QueryBaseFeeResponse {
  export type AsObject = {
    baseFee: string,
  }
}

export class QueryBlockGasRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBlockGasRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBlockGasRequest): QueryBlockGasRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBlockGasRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBlockGasRequest;
  static deserializeBinaryFromReader(message: QueryBlockGasRequest, reader: jspb.BinaryReader): QueryBlockGasRequest;
}

export namespace QueryBlockGasRequest {
  export type AsObject = {
  }
}

export class QueryBlockGasResponse extends jspb.Message {
  getGas(): number;
  setGas(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryBlockGasResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryBlockGasResponse): QueryBlockGasResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryBlockGasResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryBlockGasResponse;
  static deserializeBinaryFromReader(message: QueryBlockGasResponse, reader: jspb.BinaryReader): QueryBlockGasResponse;
}

export namespace QueryBlockGasResponse {
  export type AsObject = {
    gas: number,
  }
}

