// package: routerprotocol.routerchain.metastore
// file: metastore/tx.proto

import * as jspb from "google-protobuf";

export class MsgCreateMetadataRequest extends jspb.Message {
  getOrchestrator(): string;
  setOrchestrator(value: string): void;

  getChainid(): string;
  setChainid(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventnonce(): number;
  setEventnonce(value: number): void;

  getBlockheight(): number;
  setBlockheight(value: number): void;

  getDaapaddress(): string;
  setDaapaddress(value: string): void;

  getFeepayer(): string;
  setFeepayer(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MsgCreateMetadataRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MsgCreateMetadataRequest): MsgCreateMetadataRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MsgCreateMetadataRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MsgCreateMetadataRequest;
  static deserializeBinaryFromReader(message: MsgCreateMetadataRequest, reader: jspb.BinaryReader): MsgCreateMetadataRequest;
}

export namespace MsgCreateMetadataRequest {
  export type AsObject = {
    orchestrator: string,
    chainid: string,
    contract: string,
    eventnonce: number,
    blockheight: number,
    daapaddress: string,
    feepayer: string,
  }
}

export class MsgCreateMetadataRequestResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MsgCreateMetadataRequestResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MsgCreateMetadataRequestResponse): MsgCreateMetadataRequestResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MsgCreateMetadataRequestResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MsgCreateMetadataRequestResponse;
  static deserializeBinaryFromReader(message: MsgCreateMetadataRequestResponse, reader: jspb.BinaryReader): MsgCreateMetadataRequestResponse;
}

export namespace MsgCreateMetadataRequestResponse {
  export type AsObject = {
  }
}

export class MsgApproveFeepayerRequest extends jspb.Message {
  getFeePayer(): string;
  setFeePayer(value: string): void;

  getChainId(): string;
  setChainId(value: string): void;

  getDappAddress(): string;
  setDappAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MsgApproveFeepayerRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MsgApproveFeepayerRequest): MsgApproveFeepayerRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MsgApproveFeepayerRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MsgApproveFeepayerRequest;
  static deserializeBinaryFromReader(message: MsgApproveFeepayerRequest, reader: jspb.BinaryReader): MsgApproveFeepayerRequest;
}

export namespace MsgApproveFeepayerRequest {
  export type AsObject = {
    feePayer: string,
    chainId: string,
    dappAddress: string,
  }
}

export class MsgApproveFeepayerRequestResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MsgApproveFeepayerRequestResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MsgApproveFeepayerRequestResponse): MsgApproveFeepayerRequestResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MsgApproveFeepayerRequestResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MsgApproveFeepayerRequestResponse;
  static deserializeBinaryFromReader(message: MsgApproveFeepayerRequestResponse, reader: jspb.BinaryReader): MsgApproveFeepayerRequestResponse;
}

export namespace MsgApproveFeepayerRequestResponse {
  export type AsObject = {
  }
}

