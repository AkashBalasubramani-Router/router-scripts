// package: routerprotocol.routerchain.metastore
// file: metastore/metadata_request.proto

import * as jspb from "google-protobuf";
import * as multichain_chain_type_pb from "../multichain/chain_type_pb";
import * as metastore_meta_tx_status_pb from "../metastore/meta_tx_status_pb";

export class MetadataRequest extends jspb.Message {
  getChainid(): string;
  setChainid(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventnonce(): number;
  setEventnonce(value: number): void;

  getBlockheight(): number;
  setBlockheight(value: number): void;

  getDaapaddress(): string;
  setDaapaddress(value: string): void;

  getFeepayer(): string;
  setFeepayer(value: string): void;

  getStatus(): metastore_meta_tx_status_pb.MetaTxStatusMap[keyof metastore_meta_tx_status_pb.MetaTxStatusMap];
  setStatus(value: metastore_meta_tx_status_pb.MetaTxStatusMap[keyof metastore_meta_tx_status_pb.MetaTxStatusMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MetadataRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MetadataRequest): MetadataRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MetadataRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MetadataRequest;
  static deserializeBinaryFromReader(message: MetadataRequest, reader: jspb.BinaryReader): MetadataRequest;
}

export namespace MetadataRequest {
  export type AsObject = {
    chainid: string,
    contract: string,
    eventnonce: number,
    blockheight: number,
    daapaddress: string,
    feepayer: string,
    status: metastore_meta_tx_status_pb.MetaTxStatusMap[keyof metastore_meta_tx_status_pb.MetaTxStatusMap],
  }
}

export class MetadataRequestClaimHash extends jspb.Message {
  getChainid(): string;
  setChainid(value: string): void;

  getContract(): string;
  setContract(value: string): void;

  getEventnonce(): number;
  setEventnonce(value: number): void;

  getBlockheight(): number;
  setBlockheight(value: number): void;

  getDaapaddress(): string;
  setDaapaddress(value: string): void;

  getFeepayer(): string;
  setFeepayer(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MetadataRequestClaimHash.AsObject;
  static toObject(includeInstance: boolean, msg: MetadataRequestClaimHash): MetadataRequestClaimHash.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MetadataRequestClaimHash, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MetadataRequestClaimHash;
  static deserializeBinaryFromReader(message: MetadataRequestClaimHash, reader: jspb.BinaryReader): MetadataRequestClaimHash;
}

export namespace MetadataRequestClaimHash {
  export type AsObject = {
    chainid: string,
    contract: string,
    eventnonce: number,
    blockheight: number,
    daapaddress: string,
    feepayer: string,
  }
}

