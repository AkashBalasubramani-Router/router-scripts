// package: routerprotocol.routerchain.multichain
// file: multichain/genesis.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../gogoproto/gogo_pb";
import * as multichain_params_pb from "../multichain/params_pb";
import * as multichain_chain_config_pb from "../multichain/chain_config_pb";

export class GenesisState extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): multichain_params_pb.Params | undefined;
  setParams(value?: multichain_params_pb.Params): void;

  clearChainconfiglistList(): void;
  getChainconfiglistList(): Array<multichain_chain_config_pb.ChainConfig>;
  setChainconfiglistList(value: Array<multichain_chain_config_pb.ChainConfig>): void;
  addChainconfiglist(value?: multichain_chain_config_pb.ChainConfig, index?: number): multichain_chain_config_pb.ChainConfig;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GenesisState.AsObject;
  static toObject(includeInstance: boolean, msg: GenesisState): GenesisState.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GenesisState, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GenesisState;
  static deserializeBinaryFromReader(message: GenesisState, reader: jspb.BinaryReader): GenesisState;
}

export namespace GenesisState {
  export type AsObject = {
    params?: multichain_params_pb.Params.AsObject,
    chainconfiglistList: Array<multichain_chain_config_pb.ChainConfig.AsObject>,
  }
}

