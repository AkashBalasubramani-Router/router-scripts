import { TxBody, AuthInfo } from './lib/@buf/cosmos_cosmos-sdk.bufbuild_es/cosmos/tx/v1beta1/tx_pb.js';
import { MsgArg } from '../../types';
import { TxContext, TxToSend } from './types.js';
import { Eip712ConvertFeeArgs } from '../../core/index.js';
export declare const createCosmosPayload: (context: TxContext, cosmosPayload: MsgArg | MsgArg[], fee: Eip712ConvertFeeArgs) => {
    legacyAmino: {
        body: TxBody;
        authInfo: AuthInfo;
        signBytes: string;
    };
    signDirect: {
        body: TxBody;
        authInfo: AuthInfo;
        signBytes: string;
    };
};
export declare function generatePostBodyBroadcast(txRaw: TxToSend, broadcastMode?: string): string;
export declare const getPostOptions: (signedTx: TxToSend) => {
    method: string;
    headers: {
        'Content-Type': string;
    };
    body: string;
};
