import { MsgSend as BaseMsgSend } from '@routerprotocol/chain-api/cosmos/bank/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgSend {
    interface Params {
        amount: {
            denom: string;
            amount: string;
        };
        srcRouterAddress: string;
        dstRouterAddress: string;
    }
    interface DirectSign {
        type: '/cosmos.bank.v1beta1.MsgSend';
        message: BaseMsgSend;
    }
    interface Data extends BaseMsgSend.AsObject {
        '@type': '/cosmos.bank.v1beta1.MsgSend';
    }
    interface Amino extends BaseMsgSend.AsObject {
        type: 'cosmos-sdk/MsgSend';
    }
    interface Web3 extends BaseMsgSend.AsObject {
        '@type': '/cosmos.bank.v1beta1.MsgSend';
    }
    type Proto = BaseMsgSend;
}
/**
 * @group Message
 */
export default class MsgSend extends MsgBase<MsgSend.Params, MsgSend.Data, MsgSend.Proto, MsgSend.Amino, MsgSend.DirectSign> {
    static fromJSON(params: MsgSend.Params): MsgSend;
    toProto(): MsgSend.Proto;
    toData(): MsgSend.Data;
    toAmino(): MsgSend.Amino;
    toWeb3(): MsgSend.Web3;
    toDirectSign(): MsgSend.DirectSign;
}
