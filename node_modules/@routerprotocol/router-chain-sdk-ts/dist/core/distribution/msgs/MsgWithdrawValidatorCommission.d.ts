import { MsgWithdrawValidatorCommission as BaseMsgWithdrawValidatorCommission } from '@routerprotocol/chain-api/cosmos/distribution/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgWithdrawValidatorCommission {
    interface Params {
        validatorAddress: string;
    }
    interface DirectSign {
        type: '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission';
        message: BaseMsgWithdrawValidatorCommission;
    }
    interface Data extends BaseMsgWithdrawValidatorCommission.AsObject {
        '@type': '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission';
    }
    interface Amino extends BaseMsgWithdrawValidatorCommission.AsObject {
        type: 'cosmos-sdk/MsgWithdrawDelegationReward';
    }
    interface Web3 extends BaseMsgWithdrawValidatorCommission.AsObject {
        '@type': '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission';
    }
    type Proto = BaseMsgWithdrawValidatorCommission;
}
/**
 * @group Message
 */
export default class MsgWithdrawValidatorCommission extends MsgBase<MsgWithdrawValidatorCommission.Params, MsgWithdrawValidatorCommission.Data, MsgWithdrawValidatorCommission.Proto, MsgWithdrawValidatorCommission.Amino, MsgWithdrawValidatorCommission.DirectSign> {
    static fromJSON(params: MsgWithdrawValidatorCommission.Params): MsgWithdrawValidatorCommission;
    toProto(): MsgWithdrawValidatorCommission.Proto;
    toData(): MsgWithdrawValidatorCommission.Data;
    toAmino(): MsgWithdrawValidatorCommission.Amino;
    toWeb3(): MsgWithdrawValidatorCommission.Web3;
    toDirectSign(): MsgWithdrawValidatorCommission.DirectSign;
}
