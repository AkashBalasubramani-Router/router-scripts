import { MsgWithdrawDelegatorReward as BaseMsgWithdrawDelegatorReward } from '@routerprotocol/chain-api/cosmos/distribution/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgWithdrawDelegatorReward {
    interface Params {
        delegatorAddress: string;
        validatorAddress: string;
    }
    interface DirectSign {
        type: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward';
        message: BaseMsgWithdrawDelegatorReward;
    }
    interface Data extends BaseMsgWithdrawDelegatorReward.AsObject {
        '@type': '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward';
    }
    interface Amino extends BaseMsgWithdrawDelegatorReward.AsObject {
        type: 'cosmos-sdk/MsgWithdrawDelegationReward';
    }
    interface Web3 extends BaseMsgWithdrawDelegatorReward.AsObject {
        '@type': '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward';
    }
    type Proto = BaseMsgWithdrawDelegatorReward;
}
/**
 * @group Message
 */
export default class MsgWithdrawDelegatorReward extends MsgBase<MsgWithdrawDelegatorReward.Params, MsgWithdrawDelegatorReward.Data, MsgWithdrawDelegatorReward.Proto, MsgWithdrawDelegatorReward.Amino, MsgWithdrawDelegatorReward.DirectSign> {
    static fromJSON(params: MsgWithdrawDelegatorReward.Params): MsgWithdrawDelegatorReward;
    toProto(): MsgWithdrawDelegatorReward.Proto;
    toData(): MsgWithdrawDelegatorReward.Data;
    toAmino(): MsgWithdrawDelegatorReward.Amino;
    toWeb3(): MsgWithdrawDelegatorReward.Web3;
    toDirectSign(): MsgWithdrawDelegatorReward.DirectSign;
}
