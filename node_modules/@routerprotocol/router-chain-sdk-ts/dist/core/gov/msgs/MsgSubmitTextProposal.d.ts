import { MsgSubmitProposal as BaseMsgSubmitProposal } from '@routerprotocol/chain-api/cosmos/gov/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgSubmitTextProposal {
    interface Params {
        title: string;
        description: string;
        proposer: string;
        deposit: {
            amount: string;
            denom: string;
        };
    }
    interface DirectSign {
        type: '/cosmos.gov.v1beta1.MsgSubmitProposal';
        message: BaseMsgSubmitProposal;
    }
    interface Data extends BaseMsgSubmitProposal.AsObject {
        '@type': '/cosmos.gov.v1beta1.MsgSubmitProposal';
    }
    interface Amino extends BaseMsgSubmitProposal.AsObject {
        type: 'cosmos-sdk/MsgSubmitProposal';
    }
    interface Web3 extends BaseMsgSubmitProposal.AsObject {
        '@type': '/cosmos.authz.v1beta1.MsgSubmitProposal';
    }
    type Proto = BaseMsgSubmitProposal;
}
/**
 * @group Message
 */
export default class MsgSubmitTextProposal extends MsgBase<MsgSubmitTextProposal.Params, MsgSubmitTextProposal.Data, MsgSubmitTextProposal.Proto, MsgSubmitTextProposal.Amino, MsgSubmitTextProposal.DirectSign> {
    static fromJSON(params: MsgSubmitTextProposal.Params): MsgSubmitTextProposal;
    toProto(): MsgSubmitTextProposal.Proto;
    toData(): MsgSubmitTextProposal.Data;
    toAmino(): MsgSubmitTextProposal.Amino;
    toWeb3(): MsgSubmitTextProposal.Web3;
    toDirectSign(): MsgSubmitTextProposal.DirectSign;
    private getContent;
}
