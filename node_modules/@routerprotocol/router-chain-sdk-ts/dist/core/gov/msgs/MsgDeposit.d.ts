import { MsgDeposit as BaseMsgDeposit } from '@routerprotocol/chain-api/cosmos/gov/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgDeposit {
    interface Params {
        proposalId: number;
        amount: {
            denom: string;
            amount: string;
        };
        depositor: string;
    }
    interface DirectSign {
        type: '/cosmos.gov.v1beta1.MsgDeposit';
        message: BaseMsgDeposit;
    }
    interface Data extends BaseMsgDeposit.AsObject {
        '@type': '/cosmos.gov.v1beta1.MsgDeposit';
    }
    interface Amino extends BaseMsgDeposit.AsObject {
        type: 'cosmos-sdk/MsgDeposit';
    }
    interface Web3 extends BaseMsgDeposit.AsObject {
        '@type': '/cosmos.authz.v1beta1.MsgDeposit';
    }
    type Proto = BaseMsgDeposit;
}
/**
 * @group Message
 */
export default class MsgDeposit extends MsgBase<MsgDeposit.Params, MsgDeposit.Data, MsgDeposit.Proto, MsgDeposit.Amino, MsgDeposit.DirectSign> {
    static fromJSON(params: MsgDeposit.Params): MsgDeposit;
    toProto(): MsgDeposit.Proto;
    toData(): MsgDeposit.Data;
    toAmino(): MsgDeposit.Amino;
    toWeb3(): MsgDeposit.Web3;
    toDirectSign(): MsgDeposit.DirectSign;
}
