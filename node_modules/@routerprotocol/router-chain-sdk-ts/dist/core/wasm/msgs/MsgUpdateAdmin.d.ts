import { MsgUpdateAdmin as BaseMsgUpdateAdmin } from '@routerprotocol/chain-api/cosmwasm/wasm/v1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgUpdateAdmin {
    interface Params {
        senderAddress: string;
        newAdminAddress: string;
        contractAddress: string;
    }
    interface DirectSign {
        type: '/cosmwasm.wasm.v1.MsgUpdateAdmin';
        message: BaseMsgUpdateAdmin;
    }
    interface Data extends BaseMsgUpdateAdmin.AsObject {
        '@type': '/cosmwasm.wasm.v1.MsgUpdateAdmin';
    }
    interface Amino extends BaseMsgUpdateAdmin.AsObject {
        type: 'wasm/MsgUpdateAdmin';
    }
    interface Web3 extends BaseMsgUpdateAdmin.AsObject {
        '@type': '/cosmwasm.wasm.v1.MsgUpdateAdmin';
    }
    type Proto = BaseMsgUpdateAdmin;
}
/**
 * @group Message
 */
export default class MsgUpdateAdmin extends MsgBase<MsgUpdateAdmin.Params, MsgUpdateAdmin.Data, MsgUpdateAdmin.Proto, MsgUpdateAdmin.Amino, MsgUpdateAdmin.DirectSign> {
    static fromJSON(params: MsgUpdateAdmin.Params): MsgUpdateAdmin;
    toProto(): MsgUpdateAdmin.Proto;
    toData(): MsgUpdateAdmin.Data;
    toAmino(): MsgUpdateAdmin.Amino;
    toWeb3(): MsgUpdateAdmin.Web3;
    toDirectSign(): MsgUpdateAdmin.DirectSign;
}
